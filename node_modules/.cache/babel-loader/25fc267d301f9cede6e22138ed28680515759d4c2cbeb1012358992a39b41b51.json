{"ast":null,"code":"var _jsxFileName = \"F:\\\\3-1\\\\test\\\\my-app\\\\ExamBill-Management-System-Final-Project--main\\\\src\\\\Components\\\\InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm(props) {\n  _s();\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState();\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [currentSemester, setCurrentSemester] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectedType, setSelectedType] = useState(\"Hons\");\n  const [selectName, setSelectedName] = useState(props.name);\n  const [inputData, setInputData] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  const [selectedCriteria, setSelectedCriteria] = useState([]);\n  const handleCheckboxChange = (e, course, panelType, index) => {\n    const ischecked = e.target.checked;\n    const selectedCriteria_s = e.target.value;\n    setSelectedCriteria(prevSelectedCriteria => ({\n      ...prevSelectedCriteria\n    }));\n    if (ischecked) {\n      setSelectedCriteria([...selectedCriteria, selectedCriteria_s]);\n    } else {\n      setSelectedCriteria(selectedCriteria.filter(panelType => panelType !== selectedCriteria_s));\n    }\n  };\n  const addCriteria = (panelType, course, index) => {\n    const courseCode = courseToCodeMapping[course];\n    {\n      panelType === \"Evaluating Answer Scripts\" || panelType === \"Thesis/Project Report Evaluation\" || panelType === \"Viva Exam\" ?\n      /*#__PURE__*/\n      // Render \"Number of Students\" field for other criteria, if needed\n      _jsxDEV(\"div\", {\n        className: \"form-group select-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `numStudents${index}`,\n          children: \"Number of Students:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"number\",\n          className: `form-control${panelType === \"Evaluating Answer Scripts\" || panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`,\n          id: `numStudents${index}`,\n          name: \"numStudents\",\n          value: data.numStudents,\n          onChange: e => handleInputChange(e, index),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10\",\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"20\",\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"30\",\n            children: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"31\",\n            children: \"31\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"32\",\n            children: \"32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"33\",\n            children: \"33\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"34\",\n            children: \"34\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"35\",\n            children: \"35\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"36\",\n            children: \"36\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"37\",\n            children: \"37\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"38\",\n            children: \"38\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this) : null;\n    }\n  };\n  const addCoursePanel = courseName => {\n    const courseCode = courseToCodeMapping[courseName];\n    const newPanel = {\n      panelType: \"Making Question Paper\",\n      type: \"Hons\",\n      courseName,\n      courseCode,\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n      daysOfExam: \"--\"\n    };\n    setInputData(prevData => [...prevData, newPanel]);\n  };\n  const removeCoursePanel = courseName => {\n    setInputData(prevData => prevData.filter(panel => panel.courseName !== courseName));\n  };\n  const handleCourseChange = e => {\n    const selectedCourse = e.target.value;\n    const isChecked = e.target.checked;\n    setSelectedCoursesBySemester(prevSelectedCourses => ({\n      ...prevSelectedCourses,\n      [currentSemester]: isChecked ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse] : (prevSelectedCourses[currentSemester] || []).filter(course => course !== selectedCourse)\n    }));\n    if (isChecked) {\n      setSelectedCourses([...selectedCourses, selectedCourse]);\n      addCoursePanel(selectedCourse);\n    } else {\n      setSelectedCourses(selectedCourses.filter(course => course !== selectedCourse));\n      removeCoursePanel(selectedCourse);\n    }\n  };\n  const handleSemesterChange = newSemester => {\n    setSelectedSemester(newSemester);\n    setCurrentSemester(newSemester);\n    setInputData([]);\n    setSelectedCourses([]); // Clear the selected courses when the semester changes\n  };\n\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    if (name === \"numStudents\" || name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n    if (name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Selecting Days Of Exam is manadatory.\");\n      }\n    }\n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    }\n  };\n  const handlePanelTypeChange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = {\n      ...newInputData[index],\n      panelType: value\n    };\n    setInputData(newInputData);\n  };\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n    const results = inputData.map(data => {\n      let result = 0;\n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        }\n      }\n      return {\n        ...data,\n        result\n      };\n    });\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name = encodeURIComponent(selectName);\n    const type = encodeURIComponent(selectedType);\n    console.log(\"Panel Type:\", panelType);\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\"Algorithms-I\", \"Algorithms-I-Lab\", \"Electronic Circuits\", \"Numerical Methods\", \"Web Design and Programming Laboratory-I\", \"Technical Writing and Presentations\", \"Database Systems\", \"Computational Geometry\", \"Structured Programming Language\", \"Java\"]\n  };\n  const criteriaOptions = [\"Making Question Paper\", \"Evaluating Answer Scripts\", \"Lab Exam\", \"Question Moderation\", \"Stencil\"];\n  const courseToCodeMapping = {\n    \"Structured Programming Language\": \"CSE-105\",\n    \"Structured Programming Language-Lab\": \"CSE-106\",\n    \"Data Structures\": \"CSE 153\",\n    \"Data Structures Lab\": \"CSE 154\",\n    \"Discrete Mathematics\": \"CSE-155\",\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-107\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\": \"CSE-312\",\n    \"Technical Writing and Presentations\": \"CSE-112\",\n    \"Database Systems\": \"CSE-255\",\n    \"Computational Geometry\": \"CSE-305\",\n    \"Java\": \"CSE-212\",\n    \"Operating Systems\": \"CSE-309\",\n    \"Operating Systems Lab\": \"CSE-310\"\n  };\n  const semesterToCoursesMapping = {\n    \"1st Year 1st Semester\": [\"Structured Programming Language\", \"Structured Programming Language-Lab\", \"Electronic Circuits\"],\n    \"1st Year 2nd Semester\": [\"Data Structures\", \"Data Structures Lab\", \"Discrete Mathematics\", \"Technical Writing and Presentations\"],\n    \"2nd Year 1st Semester\": [\"Algorithms-I\", \"Algorithms-I-Lab\", \"Numerical Methods\", \"Java\"],\n    \"3rd Year 1st Semester\": [\"Web Design and Programming Laboratory-I\", \"Computational Geometry\", \"Operating Systems\", \"Operating Systems Lab\"]\n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  const criteriaOptionsForSelectedCourse = criteriaOptions || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedDepartment\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectedDepartment,\n        onChange: e => setSelectedDepartment(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Computer Science and Engineering\",\n          children: \"Computer Science and Engineering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectName\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectName,\n        onChange: e => setSelectedName(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: props.name,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedCourseType\",\n        children: \"Select Course Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedType\",\n        value: selectedType,\n        onChange: e => setSelectedType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hons\",\n          children: \"Hons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Msc\",\n          children: \"Msc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedSemester\",\n        children: \"Select Semester:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedSemester\",\n        value: selectedSemester,\n        onChange: e => {\n          setSelectedSemester(e.target.value);\n          setCurrentSemester(e.target.value); // Update current semester when selected\n          setInputData([]); // Clear panels when the semester changes\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 1st Semester\",\n          children: \"1st Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 2nd Semester\",\n          children: \"1st Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 1st Semester\",\n          children: \"2nd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 2nd Semester\",\n          children: \"2nd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 1st Semester\",\n          children: \"3rd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 2nd Semester\",\n          children: \"3rd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 1st Semester\",\n          children: \"4th Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 2nd Semester\",\n          children: \"4th Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"courseSelect\",\n        children: \"Select Courses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-checkboxes\",\n        children: courseOptionsForSelectedSemester.map((course, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"selectedCourse\",\n            value: course,\n            onChange: handleCourseChange,\n            checked: selectedCourses.includes(course),\n            className: \"checkbox-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 9\n          }, this), course]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 10\n    }, this), selectedCourses.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center \",\n        children: inputData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel border-secondary p-3 my-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"PanelNo\",\n              children: [\"# \", data.courseName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `courseName${index}`,\n                children: \"Course Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control \",\n                id: `courseName${index}`,\n                name: \"courseName\",\n                value: data.courseName,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `courseCode${index}`,\n                children: \"Course Code:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: `courseCode${index}`,\n                name: \"courseCode\",\n                value: data.courseCode,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"criteriaSelect\",\n                children: \"Select Criteria:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"criteriacheckboxes\",\n                children: criteriaOptionsForSelectedCourse.map((criteria, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"checkbox-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"selectedCriteria_s\",\n                    value: criteria,\n                    onChange: e => handleCheckboxChange(e, data.courseName, data.panelType, index),\n                    checked: selectedCriteria.includes(criteria),\n                    className: \"checkbox-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 3\n                  }, this), criteria]\n                }, optionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 3\n                }, this)\n                // Render the label and other information for the criteria here\n                )\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 1\n            }, this), data.panelType === \"Stencil\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `stencilPages${index}`,\n                children: \"Number of Stencil Pages (1-3):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `stencilPages${index}`,\n                name: \"stencilPages\",\n                value: data.stencilPages,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this) : null, data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Thesis/Project Report Evaluation\" || data.panelType === \"Viva Exam\" ?\n            /*#__PURE__*/\n            // Render \"Number of Students\" field for other criteria, if needed\n            _jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `numStudents${index}`,\n                children: \"Number of Students:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: `form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`,\n                id: `numStudents${index}`,\n                name: \"numStudents\",\n                value: data.numStudents,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"31\",\n                  children: \"31\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"32\",\n                  children: \"32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"33\",\n                  children: \"33\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"34\",\n                  children: \"34\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"35\",\n                  children: \"35\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"36\",\n                  children: \"36\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"37\",\n                  children: \"37\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"38\",\n                  children: \"38\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `numHours${index}`,\n                children: \"Number of Hours of Exam:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `numHours${index}`,\n                name: \"numHours\",\n                value: data.numHours,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6\",\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), data.panelType === \"Lab Exam\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `daysOfExam${index}`,\n                children: \"Days of Exam:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `daysOfExam${index}`,\n                name: \"daysOfExam\",\n                value: data.daysOfExam,\n                onChange: e => handleInputChange(e, index),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg calculate-button\",\n        onClick: handleCalculate,\n        children: \"Prepare My Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"/WizSJ0EQi5gTpox76OGufMqaro=\", false, function () {\n  return [useNavigate];\n});\n_c = InputForm;\nexport default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   console.log(selectName);\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter(panel => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     if (isChecked) {\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n//          <div className=\"form-group select-container\">\n//         <label htmlFor=\"courseSelect\">Select Courses:</label>\n//         <select className=\"form-control\" id=\"courseSelect\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <option key={optionIndex} value={course}>\n//               {course}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"course-radio-buttons\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <label key={optionIndex}>\n//               <input\n//                 type=\"radio\"\n//                 name=\"selectedCourse\"\n//                 value={course}\n//                 onChange={handleCourseChange}\n//               />\n//               {course}\n//             </label>\n//           ))}\n//         </div>\n//       </div>\n\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n\n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 29/10/23\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam:\"--\",\n//     },\n\n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); \n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// Oct 10:40pm\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30/10/23/12AM\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [coursePanelCounts, setCoursePanelCounts] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n\n//     // Initialize the count to 1 if it doesn't exist or increment it by 1 if it exists\n//     setCoursePanelCounts((prevCounts) => ({\n//       ...prevCounts,\n//       [courseCode]: (prevCounts[courseCode] || 0) +1 ,\n//     }));\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n\n//     if (coursePanelCounts[courseCode] > 0) {\n//       // Decrement the count by 1 if it exists\n//       setCoursePanelCounts((prevCounts) => ({\n//         ...prevCounts,\n//         [courseCode]: prevCounts[courseCode] - 1,\n//       }));\n\n//       setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//     }\n//   };\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n\n//     if (value === \"Evaluating Answer Scripts\" || value === \"Viva Exam\") {\n//       newInputData[index].numStudents = 0; // Set an initial value\n//     } else {\n//       delete newInputData[index].numStudents; // Remove the value if not applicable\n//     }\n\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//           {/* Display the current panel count for this course */}\n//     {coursePanelCounts[courseToCodeMapping[course]] || 0}\n//     <button onClick={() => addCoursePanel(course)}>+</button>\n//     <button onClick={() => removeCoursePanel(course)}>-</button>\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" || data.panelType === \"Making Question + Evaluating Answer Scripts\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30thOct,8:22\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputForm","props","_s","navigate","numPanels","setNumPanels","selectedSemester","setSelectedSemester","currentSemester","setCurrentSemester","selectedDepartment","setSelectedDepartment","selectedType","setSelectedType","selectName","setSelectedName","name","inputData","setInputData","selectedCourses","setSelectedCourses","selectedCoursesBySemester","setSelectedCoursesBySemester","selectedCriteria","setSelectedCriteria","handleCheckboxChange","e","course","panelType","index","ischecked","target","checked","selectedCriteria_s","value","prevSelectedCriteria","filter","addCriteria","courseCode","courseToCodeMapping","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","data","numStudents","onChange","handleInputChange","addCoursePanel","courseName","newPanel","numHours","tabulationType","tabulationSemester","daysOfExam","prevData","removeCoursePanel","panel","handleCourseChange","selectedCourse","isChecked","prevSelectedCourses","handleSemesterChange","newSemester","newInputData","newValue","parseInt","isNaN","console","error","alert","handlePanelTypeChange","handleCalculate","some","stencilPages","results","map","result","log","department","encodeURIComponent","semester","JSON","stringify","courseOptions","criteriaOptions","semesterToCoursesMapping","courseOptionsForSelectedDepartment","courseOptionsForSelectedSemester","criteriaOptionsForSelectedCourse","optionIndex","includes","length","readOnly","criteria","required","onClick","_c","$RefreshReg$"],"sources":["F:/3-1/test/my-app/ExamBill-Management-System-Final-Project--main/src/Components/InputForm.jsx"],"sourcesContent":["\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\n\nfunction InputForm(props) {\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState();\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [currentSemester, setCurrentSemester] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectedType, setSelectedType] = useState(\"Hons\");\n  const [selectName,setSelectedName]=useState(props.name);\n  const [inputData, setInputData] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]); \n  const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  const [selectedCriteria, setSelectedCriteria] = useState([]);\n\n\n  const handleCheckboxChange = (e, course, panelType,index) => {\n    const ischecked = e.target.checked;\n    const selectedCriteria_s=e.target.value;\n    setSelectedCriteria((prevSelectedCriteria) => ({\n      ...prevSelectedCriteria,\n      \n    }));\n  \n  \n    if (ischecked) {\n      \n      setSelectedCriteria([...selectedCriteria,selectedCriteria_s])\n     \n    } else {\n      setSelectedCriteria(selectedCriteria.filter((panelType) =>panelType !== selectedCriteria_s));\n   \n    }\n\n   \n  };\n  const addCriteria =(panelType,course,index) => {\n    const courseCode=courseToCodeMapping[course]; \n  \n     {panelType === \"Evaluating Answer Scripts\" ||\n                panelType === \"Thesis/Project Report Evaluation\" ||\n                panelType === \"Viva Exam\" ? (\n                  // Render \"Number of Students\" field for other criteria, if needed\n                  <div className=\"form-group select-container\">\n                    <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n                    <select\n                      type=\"number\"\n                      className={`form-control${panelType === \"Evaluating Answer Scripts\" || panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n                      id={`numStudents${index}`}\n                      name=\"numStudents\"\n                      value={data.numStudents}\n                      onChange={(e) => handleInputChange(e, index)}\n                      >\n                        <option value=\"0\">0</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"31\">31</option>\n                        <option value=\"32\">32</option>\n                        <option value=\"33\">33</option>\n                        <option value=\"34\">34</option>\n                        <option value=\"35\">35</option>\n                        <option value=\"36\">36</option>\n                        <option value=\"37\">37</option>\n                        <option value=\"38\">38</option>\n                    </select>\n                   \n                  </div>\n                ) : null}\n               \n   \n     \n  };\n  const addCoursePanel = (courseName) => {\n    const courseCode = courseToCodeMapping[courseName];\n    const newPanel = {\n      panelType: \"Making Question Paper\",\n      type: \"Hons\",\n      courseName,\n      courseCode,\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n      daysOfExam: \"--\",\n    };\n    setInputData((prevData) => [...prevData, newPanel]);\n  };\n\n  const removeCoursePanel = (courseName) => {\n    setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n  };\n\n  const handleCourseChange = (e) => {\n    const selectedCourse = e.target.value;\n    const isChecked = e.target.checked;\n\n    setSelectedCoursesBySemester((prevSelectedCourses) => ({\n      ...prevSelectedCourses,\n      [currentSemester]: isChecked\n        ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n        : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n    }));\n\n    if (isChecked) {\n      setSelectedCourses([...selectedCourses, selectedCourse]);\n      addCoursePanel(selectedCourse);\n    } else {\n      setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n      removeCoursePanel(selectedCourse);\n    }\n  };\n\n  const handleSemesterChange = (newSemester) => {\n    setSelectedSemester(newSemester);\n    setCurrentSemester(newSemester);\n    setInputData([]);\n    setSelectedCourses([]); // Clear the selected courses when the semester changes\n  };\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const newInputData = [...inputData];\n   \n\n    if (name === \"numStudents\"|| name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n\n    if (name === \"daysOfExam\" ) {\n        const newValue = parseInt(value,10);\n        if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n        }\n        else {\n          console.error(\"Selecting Days Of Exam is manadatory.\");\n        }\n    }\n    \n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    }\n  };\n   \n \n  \n  const handlePanelTypeChange = (e, index) => {\n    const { value } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = { ...newInputData[index], panelType: value };\n    setInputData(newInputData);\n  };\n\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    \n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n \n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n\n    const results = inputData.map((data) => {\n      let result = 0;\n     \n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        } \n      } \n   \n      return { ...data, result };\n    });\n\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name=encodeURIComponent(selectName);\n    const type=encodeURIComponent(selectedType);\n    console.log(\"Panel Type:\", panelType);\n\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\n      \"Algorithms-I\",\n      \"Algorithms-I-Lab\",\n      \"Electronic Circuits\",\n      \"Numerical Methods\",\n      \"Web Design and Programming Laboratory-I\",\n      \"Technical Writing and Presentations\",\n      \"Database Systems\",\n      \"Computational Geometry\",\n      \"Structured Programming Language\",\n      \"Java\",\n    ],\n  };\n  const criteriaOptions=[\n    \"Making Question Paper\",\"Evaluating Answer Scripts\",\"Lab Exam\",\"Question Moderation\",\"Stencil\",\n  ];\n\n  const courseToCodeMapping = {\n    \"Structured Programming Language\":\"CSE-105\",\n    \"Structured Programming Language-Lab\": \"CSE-106\",\n    \"Data Structures\":\"CSE 153\",\n    \"Data Structures Lab\":\"CSE 154\",\n    \"Discrete Mathematics\":\"CSE-155\",\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-107\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n    \"Technical Writing and Presentations\":\"CSE-112\",\n    \"Database Systems\":\"CSE-255\",\n    \"Computational Geometry\":\"CSE-305\",\n    \"Java\":\"CSE-212\",\n    \"Operating Systems\":\"CSE-309\",\n    \"Operating Systems Lab\":\"CSE-310\",\n   \n  };\n\n  const semesterToCoursesMapping = {\n    \"1st Year 1st Semester\": [\n      \"Structured Programming Language\",\n      \"Structured Programming Language-Lab\",\n      \"Electronic Circuits\",\n  \n    ],\n    \"1st Year 2nd Semester\": [\n      \"Data Structures\",\n      \"Data Structures Lab\",\n      \"Discrete Mathematics\",\n      \"Technical Writing and Presentations\"\n    ],\n\n    \"2nd Year 1st Semester\": [\n      \"Algorithms-I\",\n      \"Algorithms-I-Lab\",\n      \"Numerical Methods\",\n      \"Java\",\n    ],\n\n    \"3rd Year 1st Semester\": [\n      \"Web Design and Programming Laboratory-I\",\n      \"Computational Geometry\",\n      \"Operating Systems\",\n      \"Operating Systems Lab\",\n    ],\n   \n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  const criteriaOptionsForSelectedCourse=criteriaOptions|| [];\n  \n  \n  return (\n    <div className=\"container mt-4 \">\n    \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedDepartment\">Select Department:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectedDepartment}\n          onChange={(e) => setSelectedDepartment(e.target.value)}\n        >\n          <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n        </select>\n      </div>\n\n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectName\">Name:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectName}\n          onChange={(e) => setSelectedName(e.target.value)}\n        >\n          <option value={props.name}>{props.name}</option>\n        </select>\n      </div>\n       \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedType\"\n          value={selectedType}\n          onChange={(e) => setSelectedType(e.target.value)}\n        >\n          <option value=\"Hons\">Hons</option>\n          <option value=\"Msc\">Msc</option>\n          {/* Add more course type options as needed */}\n        </select>\n      </div>\n    \n     \n      <div className=\"form-group select-container\">\n         <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n         <select\n          className=\"form-control\"\n          id=\"selectedSemester\"\n          value={selectedSemester}\n          onChange={(e) => {\n            setSelectedSemester(e.target.value);\n            setCurrentSemester(e.target.value); // Update current semester when selected\n            setInputData([]); // Clear panels when the semester changes\n          }}\n        >\n          <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n           <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n           <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n           <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n           <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n           <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n           <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n         </select>\n         </div>\n         \n\n         <div className=\"form-group select-container\">\n  <label htmlFor=\"courseSelect\">Select Courses:</label>\n  <div className=\"course-checkboxes\">\n    {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n      <label key={optionIndex} className=\"checkbox-label\">\n        <input\n          type=\"checkbox\"\n          name=\"selectedCourse\"\n          value={course}\n          onChange={handleCourseChange}\n          checked={selectedCourses.includes(course)}\n          className=\"checkbox-input\"\n        />\n        {course}\n      </label>\n    ))}\n  </div>\n</div>\n       \n\n      {selectedCourses.length > 0 && (\n      <div className=\"panel-border\">\n      <div className=\"row d-flex justify-content-center \">\n        {inputData.map((data, index) => (\n          <div key={index} className=\"col-md-4 mb-3\">\n            <div className=\"panel border-secondary p-3 my-2\">\n              <h3 id=\"PanelNo\"># {data.courseName}</h3>\n              \n            \n              <div className=\"form-group select-container\">\n  <label htmlFor={`courseName${index}`}>Course Name:</label>\n  <input\n    type=\"text\"\n    className=\"form-control \"\n    id={`courseName${index}`}\n    name=\"courseName\"\n    value={data.courseName}\n    readOnly\n  />\n  </div>\n\n<div className=\"form-group select-container\">\n  <label htmlFor={`courseCode${index}`}>Course Code:</label>\n  <input\n    type=\"text\"\n    className=\"form-control\"\n    id={`courseCode${index}`}\n    name=\"courseCode\"\n    value={data.courseCode}\n    readOnly\n  />\n</div>\n         \n       \n<div className=\"form-group select-container\">\n  <label htmlFor=\"criteriaSelect\">Select Criteria:</label>\n  <div className=\"criteriacheckboxes\">\n{criteriaOptionsForSelectedCourse.map((criteria,optionIndex) => (\n  <label key={optionIndex} className=\"checkbox-label\">\n  <input\n    type=\"checkbox\"\n    name=\"selectedCriteria_s\"\n    value={criteria}\n    onChange={(e) => handleCheckboxChange(e, data.courseName, data.panelType,index)}\n    checked={selectedCriteria.includes(criteria)}\n    className=\"checkbox-input\"\n  />\n  {criteria}\n  </label>\n  // Render the label and other information for the criteria here\n))\n\n\n}\n   </div>\n</div>       \n\n             \n              {data.panelType === \"Stencil\" ? (\n                <div className=\"form-group select-container\">\n                  <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n                  <select\n                    type=\"number\"\n                    className=\"form-control\"\n                    id={`stencilPages${index}`}\n                    name=\"stencilPages\"\n                    value={data.stencilPages}\n                    onChange={(e) => handleInputChange(e, index)}\n                  >     \n                        <option value=\"0\">--</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                    </select>\n                </div>\n              ) : null}\n              {data.panelType === \"Evaluating Answer Scripts\" ||\n                data.panelType === \"Thesis/Project Report Evaluation\" ||\n                data.panelType === \"Viva Exam\" ? (\n                  // Render \"Number of Students\" field for other criteria, if needed\n                  <div className=\"form-group select-container\">\n                    <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n                    <select\n                      type=\"number\"\n                      className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n                      id={`numStudents${index}`}\n                      name=\"numStudents\"\n                      value={data.numStudents}\n                      onChange={(e) => handleInputChange(e, index)}\n                      >\n                        <option value=\"0\">0</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"31\">31</option>\n                        <option value=\"32\">32</option>\n                        <option value=\"33\">33</option>\n                        <option value=\"34\">34</option>\n                        <option value=\"35\">35</option>\n                        <option value=\"36\">36</option>\n                        <option value=\"37\">37</option>\n                        <option value=\"38\">38</option>\n                    </select>\n                   \n                  </div>\n                ) : null}\n\n            \n              <div className=\"form-group select-container\">\n                <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n                <select\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={`numHours${index}`}\n                  name=\"numHours\"\n                  value={data.numHours}\n                  onChange={(e) => handleInputChange(e, index)}\n                > \n                  <option value=\"0\">--</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n\n                </select>\n                \n              </div>\n\n              {data.panelType === \"Lab Exam\" ? (\n                <div className=\"form-group select-container\">\n                  <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n                  <select\n                    type=\"number\"\n                    className=\"form-control\"\n                    id={`daysOfExam${index}`}\n                    name=\"daysOfExam\"\n                    value={data.daysOfExam}\n                    onChange={(e) => handleInputChange(e, index)}required\n                  > \n                    <option value=\"0\">--</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    </select>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n      </div>\n       )}\n      <div className=\"text-center\"> {/* Center-align the button */}\n        <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n          Prepare My Bill\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;\n\n\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   console.log(selectName);\n  \n  \n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter(panel => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     if (isChecked) {\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n \n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n   \n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n//          <div className=\"form-group select-container\">\n//         <label htmlFor=\"courseSelect\">Select Courses:</label>\n//         <select className=\"form-control\" id=\"courseSelect\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <option key={optionIndex} value={course}>\n//               {course}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"course-radio-buttons\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <label key={optionIndex}>\n//               <input\n//                 type=\"radio\"\n//                 name=\"selectedCourse\"\n//                 value={course}\n//                 onChange={handleCourseChange}\n//               />\n//               {course}\n//             </label>\n//           ))}\n//         </div>\n//       </div>\n   \n       \n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n  \n   \n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n       \n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n       \n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n\n// 29/10/23\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n  \n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam:\"--\",\n//     },\n  \n   \n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); \n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n   \n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n     \n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n       \n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// Oct 10:40pm\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  \n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30/10/23/12AM\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [coursePanelCounts, setCoursePanelCounts] = useState({});\n\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n  \n//     // Initialize the count to 1 if it doesn't exist or increment it by 1 if it exists\n//     setCoursePanelCounts((prevCounts) => ({\n//       ...prevCounts,\n//       [courseCode]: (prevCounts[courseCode] || 0) +1 ,\n//     }));\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n  \n\n//   const removeCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n  \n//     if (coursePanelCounts[courseCode] > 0) {\n//       // Decrement the count by 1 if it exists\n//       setCoursePanelCounts((prevCounts) => ({\n//         ...prevCounts,\n//         [courseCode]: prevCounts[courseCode] - 1,\n//       }));\n  \n//       setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//     }\n//   };\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n  \n//     if (value === \"Evaluating Answer Scripts\" || value === \"Viva Exam\") {\n//       newInputData[index].numStudents = 0; // Set an initial value\n//     } else {\n//       delete newInputData[index].numStudents; // Remove the value if not applicable\n//     }\n  \n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//           {/* Display the current panel count for this course */}\n//     {coursePanelCounts[courseToCodeMapping[course]] || 0}\n//     <button onClick={() => addCoursePanel(course)}>+</button>\n//     <button onClick={() => removeCoursePanel(course)}>-</button>\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n                 \n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" || data.panelType === \"Making Question + Evaluating Answer Scripts\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n\n// 30thOct,8:22\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  \n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n"],"mappings":"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AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}