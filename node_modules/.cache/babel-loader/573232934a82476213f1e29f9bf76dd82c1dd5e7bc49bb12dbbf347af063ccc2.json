{"ast":null,"code":"var _jsxFileName = \"F:\\\\3-1\\\\test\\\\my-app\\\\ExamBill-Management-System-Final-Project--main\\\\src\\\\Components\\\\InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm(props) {\n  _s();\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState(1);\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [selectedYear, setSelectedYear] = useState(\"2022\");\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectName, setSelectedName] = useState(props.name);\n  console.log(selectName);\n  const [inputData, setInputData] = useState([{\n    panelType: \"Making Question Paper\",\n    type: \"Hons\",\n    courseName: \"Algorithms-I\",\n    courseCode: \"CSE-209\",\n    numStudents: 0,\n    numHours: 0,\n    tabulationType: \"Yearly\",\n    tabulationSemester: \"Final Year\",\n    daysOfExam: \"--\"\n  }]);\n  const handleNumPanelsChange = e => {\n    const numPanels = parseInt(e.target.value);\n    setInputData(prevData => {\n      const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n      return newInputData;\n    });\n    setNumPanels(numPanels);\n    setInputData(prevData => {\n      const newPanels = new Array(numPanels - prevData.length).fill({\n        panelType: \"Making Question Paper\",\n        type: \"Hons\",\n        courseName: \"Algorithms-I\",\n        courseCode: \"CSE-209\",\n        numStudents: 0,\n        numHours: 0,\n        tabulationType: \"Yearly\",\n        tabulationSemester: \"Final Year\",\n        daysOfExam: \"--\"\n      });\n      return prevData.concat(newPanels);\n    });\n  };\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    if (name === \"courseName\") {\n      // If the courseName is changed, set the corresponding course code\n      const courseCode = courseToCodeMapping[value];\n      newInputData[index] = {\n        ...newInputData[index],\n        courseName: value,\n        courseCode\n      };\n      setInputData(newInputData);\n    }\n    if (name === \"numStudents\" || name === \"numStudents\" || name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n    if (name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Selecting Days Of Exam is manadatory.\");\n      }\n    }\n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    }\n  };\n  const handlePanelTypeChange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = {\n      ...newInputData[index],\n      panelType: value\n    };\n    setInputData(newInputData);\n  };\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n    const results = inputData.map(data => {\n      let result = 0;\n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        }\n      }\n      return {\n        ...data,\n        result\n      };\n    });\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const year = encodeURIComponent(selectedYear);\n    const name = encodeURIComponent(selectName);\n    console.log(\"Panel Type:\", panelType);\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&year${year}&name=${name}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\"Algorithms-I\", \"Algorithms-I-Lab\", \"Electronic Circuits\", \"Numerical Methods\", \"Web Design and Programming Laboratory-I\", \"Technical Writing and Presentations\", \"Database Systems\", \"Computational Geometry\", \"Structured Programming Language\", \"Java\"]\n  };\n  const courseCodeOptions = {\n    \"Computer Science and Engineering\": [\"CSE-209\", \"CSE-203\", \"CSE-205\", \"CSE-312\", \"CSE-212\", \"CSE-255\", \"CSE-305\", \"CSE-212\", \"CSE-107\", \"CSE-105\"]\n  };\n  const courseToCodeMapping = {\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-203\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\": \"CSE-312\",\n    \"Technical Writing and Presentations\": \"CSE-112\",\n    \"Database Systems\": \"CSE-255\",\n    \"Computational Geometry\": \"CSE-305\",\n    \"Structured Programming Language\": \"CSE-105\",\n    \"Java\": \"CSE-212\"\n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedDepartment\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectedDepartment,\n        onChange: e => setSelectedDepartment(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Computer Science and Engineering\",\n          children: \"Computer Science and Engineering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectName\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectName,\n        onChange: e => setSelectedName(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: props.name,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedSemester\",\n        children: \"Select Semester:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          maxWidth: '20%'\n        },\n        className: \"form-control\",\n        id: \"selectedSemester\",\n        value: selectedSemester,\n        onChange: e => setSelectedSemester(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 1st Semester\",\n          children: \"1st Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 2nd Semester\",\n          children: \"1st Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 1st Semester\",\n          children: \"2nd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 2nd Semester\",\n          children: \"2nd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 1st Semester\",\n          children: \"3rd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 2nd Semester\",\n          children: \"3rd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 1st Semester\",\n          children: \"4th Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 2nd Semester\",\n          children: \"4th Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedSemester\",\n        children: \"Select Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          maxWidth: '20%'\n        },\n        className: \"form-control\",\n        id: \"selectedYear\",\n        value: selectedYear,\n        onChange: e => setSelectedYear(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2020\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \"2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2023\",\n          children: \"2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group \",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numPanels\",\n        children: \"Select Number of Panel(s):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"numPanels\",\n        value: numPanels,\n        onChange: handleNumPanelsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center \",\n      children: inputData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel border-secondary p-3 my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"PanelNo\",\n            children: [\"# \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `panelType${index}`,\n              children: \"Criteria Of Work:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `panelType${index}`,\n              name: \"panelType\",\n              value: data.panelType,\n              onChange: e => handlePanelTypeChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Making Question Paper\",\n                children: \"Making Question Paper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Evaluating Answer Scripts\",\n                children: \"Evaluating Answer Scripts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Question Moderation\",\n                children: \"Question Moderation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Lab Exam\",\n                children: \"Lab Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Viva Exam\",\n                children: \"Viva Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Stencil\",\n                children: \"Stencil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `type${index}`,\n              children: \"Type (Hons/Masters/MPhil/PhD):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `type${index}`,\n              name: \"type\",\n              value: data.type,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Hons\",\n                children: \"Hons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Masters\",\n                children: \"Masters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MPhil\",\n                children: \"MPhil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PhD\",\n                children: \"PhD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `courseName${index}`,\n              children: \"Course Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `courseName${index}`,\n              name: \"courseName\",\n              value: data.courseName,\n              onChange: e => handleInputChange(e, index),\n              children: courseOptionsForSelectedDepartment.map((course, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: course,\n                children: course\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `courseCode${index}`,\n              children: \"Course Code:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: `courseCode${index}`,\n              name: \"courseCode\",\n              value: data.courseCode,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), data.panelType === \"Stencil\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `stencilPages${index}`,\n              children: \"Number of Stencil Pages (1-3):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: `stencilPages${index}`,\n              name: \"stencilPages\",\n              value: data.stencilPages,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this) : null, data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Thesis/Project Report Evaluation\" || data.panelType === \"Viva Exam\" ?\n          /*#__PURE__*/\n          // Render \"Number of Students\" field for other criteria, if needed\n          _jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `numStudents${index}`,\n              children: \"Number of Students:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"number\",\n              className: `form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`,\n              id: `numStudents${index}`,\n              name: \"numStudents\",\n              value: data.numStudents,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"31\",\n                children: \"31\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"32\",\n                children: \"32\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"33\",\n                children: \"33\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"34\",\n                children: \"34\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"35\",\n                children: \"35\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"36\",\n                children: \"36\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"37\",\n                children: \"37\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"38\",\n                children: \"38\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 19\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-conatiner\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `numHours${index}`,\n              children: \"Number of Hours of Exam:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: `numHours${index}`,\n              name: \"numHours\",\n              value: data.numHours,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), data.panelType === \"Lab Exam\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `daysOfExam${index}`,\n              children: \"Days of Exam:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: `daysOfExam${index}`,\n              name: \"daysOfExam\",\n              value: data.daysOfExam,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg calculate-button\",\n        onClick: handleCalculate,\n        children: \"Prepare My Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"xmsoWiLOgcyuNkVPoCAKBgdaHyo=\", false, function () {\n  return [useNavigate];\n});\n_c = InputForm;\nexport default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n\n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputForm","props","_s","navigate","numPanels","setNumPanels","selectedSemester","setSelectedSemester","selectedYear","setSelectedYear","selectedDepartment","setSelectedDepartment","selectName","setSelectedName","name","console","log","inputData","setInputData","panelType","type","courseName","courseCode","numStudents","numHours","tabulationType","tabulationSemester","daysOfExam","handleNumPanelsChange","e","parseInt","target","value","prevData","newInputData","slice","newPanels","Array","length","fill","concat","handleInputChange","index","courseToCodeMapping","newValue","isNaN","error","alert","handlePanelTypeChange","handleCalculate","some","data","stencilPages","results","map","result","department","encodeURIComponent","semester","year","JSON","stringify","courseOptions","courseCodeOptions","courseOptionsForSelectedDepartment","courseCodeOptionsForSelectedDepartment","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","style","display","justifyContent","maxWidth","course","optionIndex","readOnly","onClick","_c","$RefreshReg$"],"sources":["F:/3-1/test/my-app/ExamBill-Management-System-Final-Project--main/src/Components/InputForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\n\nfunction InputForm(props) {\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState(1);\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [selectedYear, setSelectedYear] = useState(\"2022\");\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectName,setSelectedName]=useState(props.name);\n  console.log(selectName);\n  \n  const [inputData, setInputData] = useState([\n    {\n      panelType: \"Making Question Paper\",\n      type: \"Hons\",\n      courseName: \"Algorithms-I\",\n      courseCode: \"CSE-209\",\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n      daysOfExam:\"--\",\n    },\n  \n   \n  ]);\n const handleNumPanelsChange = (e) => {\n    const numPanels = parseInt(e.target.value);\n     setInputData((prevData) => {\n      const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n      return newInputData;\n    });\n    setNumPanels(numPanels);\n    setInputData((prevData) => {\n      const newPanels = new Array(numPanels - prevData.length).fill({\n        panelType: \"Making Question Paper\",\n        type: \"Hons\",\n        courseName: \"Algorithms-I\",\n        courseCode: \"CSE-209\",\n        numStudents: 0,\n        numHours: 0,\n        tabulationType: \"Yearly\",\n        tabulationSemester: \"Final Year\",\n        daysOfExam:\"--\",\n      });\n      return prevData.concat(newPanels);\n    });\n  };\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n   \n    const newInputData = [...inputData];\n    \n    if (name === \"courseName\") {\n      // If the courseName is changed, set the corresponding course code\n      const courseCode = courseToCodeMapping[value];\n      newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n      setInputData(newInputData);\n    } \n\n    if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n\n    if (name === \"daysOfExam\" ) {\n        const newValue = parseInt(value,10);\n        if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n        }\n        else {\n          console.error(\"Selecting Days Of Exam is manadatory.\");\n        }\n    }\n    \n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    }\n  };\n   \n \n  \n  const handlePanelTypeChange = (e, index) => {\n    const { value } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = { ...newInputData[index], panelType: value };\n    setInputData(newInputData);\n  };\n\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    \n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n \n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n\n    const results = inputData.map((data) => {\n      let result = 0;\n     \n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        } \n      } \n   \n      return { ...data, result };\n    });\n\n    console.log(\"Results after calculation:\", results);\n\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const year = encodeURIComponent(selectedYear);\n    const name=encodeURIComponent(selectName);\n    console.log(\"Panel Type:\", panelType);\n\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&year${year}&name=${name}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\n      \"Algorithms-I\",\n      \"Algorithms-I-Lab\",\n      \"Electronic Circuits\",\n      \"Numerical Methods\",\n      \"Web Design and Programming Laboratory-I\",\n      \"Technical Writing and Presentations\",\n      \"Database Systems\",\n      \"Computational Geometry\",\n      \"Structured Programming Language\",\n      \"Java\",\n    ],\n  };\n  const courseCodeOptions = {\n    \"Computer Science and Engineering\": [\n      \"CSE-209\",\n      \"CSE-203\",\n      \"CSE-205\",\n      \"CSE-312\",\n      \"CSE-212\",\n      \"CSE-255\",\n      \"CSE-305\",\n      \"CSE-212\",\n      \"CSE-107\",\n      \"CSE-105\",\n    ],\n  };\n\n  const courseToCodeMapping = {\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-203\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n    \"Technical Writing and Presentations\":\"CSE-112\",\n    \"Database Systems\":\"CSE-255\",\n    \"Computational Geometry\":\"CSE-305\",\n    \"Structured Programming Language\":\"CSE-105\",\n    \"Java\":\"CSE-212\",\n   \n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n  return (\n    <div className=\"container mt-4 \">\n    \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedDepartment\">Select Department:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectedDepartment}\n          onChange={(e) => setSelectedDepartment(e.target.value)}\n        >\n          <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n        </select>\n      </div>\n\n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectName\">Name:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectName}\n          onChange={(e) => setSelectedName(e.target.value)}\n        >\n          <option value={props.name}>{props.name}</option>\n        </select>\n      </div>\n       \n    \n\n      <div className=\"form-group select-container\" style={{display:'flex',justifyContent:'space-between'}}>\n         <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n         <select\n          style={{maxWidth:'20%'}}\n          className=\"form-control\"\n          id=\"selectedSemester\"\n          value={selectedSemester}\n          onChange={(e) => setSelectedSemester(e.target.value)}\n        >\n          <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n           <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n           <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n          <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n           <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n           <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n           <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n         <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n         </select>\n         <label htmlFor=\"selectedSemester\" >Select Year:</label>\n         <select\n          style={{maxWidth:'20%'}}\n          className=\"form-control\"\n          id=\"selectedYear\"\n          value={selectedYear}\n          onChange={(e) => setSelectedYear(e.target.value)}\n        >\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2023\">2023</option>\n          \n          \n         </select>\n       </div>\n        \n\n      <div className=\"form-group \">\n        <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          id=\"numPanels\"\n          value={numPanels}\n          onChange={handleNumPanelsChange}\n        />\n      </div>\n       \n\n      <div className=\"row d-flex justify-content-center \">\n        {inputData.map((data, index) => (\n          <div key={index} className=\"col-md-4 mb-3\">\n            <div className=\"panel border-secondary p-3 my-2\">\n              <h3 id=\"PanelNo\"># {index + 1}</h3>\n              <div className=\"form-group select-container\">\n                <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n                <select className=\"form-control\"\n                  id={`panelType${index}`}\n                  name=\"panelType\"\n                  value={data.panelType}\n                  onChange={(e) => handlePanelTypeChange(e, index)}\n                >\n                  <option value=\"Making Question Paper\">Making Question Paper</option>\n                  <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n                  <option value=\"Question Moderation\">Question Moderation</option>\n                  <option value=\"Lab Exam\">Lab Exam</option>\n                  <option value=\"Viva Exam\">Viva Exam</option>\n                  <option value=\"Stencil\">Stencil</option>\n                </select>\n              </div>\n              <div className=\"form-group select-container\">\n                <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n                <select\n                  className=\"form-control\"\n                  id={`type${index}`}\n                  name=\"type\"\n                  value={data.type}\n                  onChange={(e) => handleInputChange(e, index)}\n                >\n                  <option value=\"Hons\">Hons</option>\n                  <option value=\"Masters\">Masters</option>\n                  <option value=\"MPhil\">MPhil</option>\n                  <option value=\"PhD\">PhD</option>\n                </select>\n              </div>\n              <div className=\"form-group select-container\">\n              <label htmlFor={`courseName${index}`}>Course Name:</label>\n              <select\n                className=\"form-control\"\n                id={`courseName${index}`}\n                name=\"courseName\"\n                value={data.courseName}\n                onChange={(e) => handleInputChange(e, index)}\n              >\n                {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n                  <option key={optionIndex} value={course}>\n                    {course}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group select-container\">\n                <label htmlFor={`courseCode${index}`}>Course Code:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id={`courseCode${index}`}\n                  name=\"courseCode\"\n                  value={data.courseCode}\n                  readOnly\n                />\n              </div>\n              {data.panelType === \"Stencil\" ? (\n                <div className=\"form-group select-container\">\n                  <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n                  <select\n                    type=\"number\"\n                    className=\"form-control\"\n                    id={`stencilPages${index}`}\n                    name=\"stencilPages\"\n                    value={data.stencilPages}\n                    onChange={(e) => handleInputChange(e, index)}\n                  >     \n                        <option value=\"0\">--</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                    </select>\n                </div>\n              ) : null}\n              {data.panelType === \"Evaluating Answer Scripts\" ||\n                data.panelType === \"Thesis/Project Report Evaluation\" ||\n                data.panelType === \"Viva Exam\" ? (\n                  // Render \"Number of Students\" field for other criteria, if needed\n                  <div className=\"form-group select-container\">\n                    <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n                    <select\n                      type=\"number\"\n                      className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n                      id={`numStudents${index}`}\n                      name=\"numStudents\"\n                      value={data.numStudents}\n                      onChange={(e) => handleInputChange(e, index)}\n                      >\n                        <option value=\"0\">0</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"31\">31</option>\n                        <option value=\"32\">32</option>\n                        <option value=\"33\">33</option>\n                        <option value=\"34\">34</option>\n                        <option value=\"35\">35</option>\n                        <option value=\"36\">36</option>\n                        <option value=\"37\">37</option>\n                        <option value=\"38\">38</option>\n                    </select>\n                   \n                  </div>\n                ) : null}\n\n            \n              <div className=\"form-group select-conatiner\">\n                <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n                <select\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={`numHours${index}`}\n                  name=\"numHours\"\n                  value={data.numHours}\n                  onChange={(e) => handleInputChange(e, index)}\n                > \n                  <option value=\"0\">--</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n\n                </select>\n                \n              </div>\n\n              {data.panelType === \"Lab Exam\" ? (\n                <div className=\"form-group select-container\">\n                  <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n                  <select\n                    type=\"number\"\n                    className=\"form-control\"\n                    id={`daysOfExam${index}`}\n                    name=\"daysOfExam\"\n                    value={data.daysOfExam}\n                    onChange={(e) => handleInputChange(e, index)}\n                  > \n                    <option value=\"0\">--</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    </select>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"text-center\"> {/* Center-align the button */}\n        <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n          Prepare My Bill\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n  \n   \n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n       \n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n       \n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}