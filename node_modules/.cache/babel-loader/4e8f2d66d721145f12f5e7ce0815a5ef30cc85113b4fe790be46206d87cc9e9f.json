{"ast":null,"code":"var _jsxFileName = \"F:\\\\3-1\\\\test\\\\my-app\\\\ExamBill-Management-System-Final-Project--main\\\\src\\\\Components\\\\InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../CSS/input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm(props) {\n  _s();\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState(1);\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectName, setSelectedName] = useState(props.name);\n  console.log(selectName);\n  const [inputData, setInputData] = useState([{\n    panelType: \"Making Question Paper\",\n    type: \"Hons\",\n    courseName: \"Algorithms-I\",\n    courseCode: \"CSE-209\",\n    numStudents: 0,\n    numHours: 0,\n    tabulationType: \"Yearly\",\n    tabulationSemester: \"Final Year\"\n  }]);\n  const handleNumPanelsChange = e => {\n    const numPanels = parseInt(e.target.value);\n    setInputData(prevData => {\n      const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n      return newInputData;\n    });\n    setNumPanels(numPanels);\n    setInputData(prevData => {\n      const newPanels = new Array(numPanels - prevData.length).fill({\n        panelType: \"Making Question Paper\",\n        type: \"Hons\",\n        courseName: \"Algorithms-I\",\n        courseCode: \"CSE-209\",\n        numStudents: 0,\n        numHours: 0,\n        tabulationType: \"Yearly\",\n        tabulationSemester: \"Final Year\"\n      });\n      return prevData.concat(newPanels);\n    });\n  };\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    }\n  };\n  const handlePanelTypeChange = (e, index) => {\n    const {\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = {\n      ...newInputData[index],\n      panelType: value\n    };\n    setInputData(newInputData);\n  };\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n    const results = inputData.map(data => {\n      let result = 0;\n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        }\n      }\n      return {\n        ...data,\n        result\n      };\n    });\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name = encodeURIComponent(selectName);\n    console.log(\"Panel Type:\", panelType);\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\"Algorithms-I\", \"Electronic Circuits\", \"Numerical Methods\", \"Web Design and Programming Laboratory-I\", \"Technical Writing and Presentations\", \"Database Systems\", \"Computational Geometry\"]\n  };\n  const courseCodeOptions = {\n    \"Computer Science and Engineering\": [\"CSE-209\", \"CSE-203\", \"CSE-205\", \"CSE-312\", \"CSE-212\", \"CSE-255\", \"CSE-305\"]\n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedDepartment\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectedDepartment,\n        onChange: e => setSelectedDepartment(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Computer Science and Engineering\",\n          children: \"Computer Science and Engineering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectName\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectName,\n        onChange: e => setSelectedName(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: props.name,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group \",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numPanels\",\n        children: \"Select number of Panel(s):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"numPanels\",\n        value: numPanels,\n        onChange: handleNumPanelsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center \",\n      children: inputData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel border-secondary p-3 my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"PanelNo\",\n            children: [\"Panel \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `panelType${index}`,\n              children: \"Criteria:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `panelType${index}`,\n              name: \"panelType\",\n              value: data.panelType,\n              onChange: e => handlePanelTypeChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Making Question Paper\",\n                children: \"Making Question Paper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Evaluating Answer Scripts\",\n                children: \"Evaluating Answer Scripts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Question Moderation\",\n                children: \"Question Moderation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Lab Exam\",\n                children: \"Lab Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Viva Exam\",\n                children: \"Viva Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Thesis/Project Report Evaluation\",\n                children: \"Thesis/Project Report Evaluation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Stencil\",\n                children: \"Stencil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `type${index}`,\n              children: \"Type (Hons/Masters/MPhil/PhD):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `type${index}`,\n              name: \"type\",\n              value: data.type,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Hons\",\n                children: \"Hons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Masters\",\n                children: \"Masters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MPhil\",\n                children: \"MPhil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PhD\",\n                children: \"PhD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `courseName${index}`,\n              children: \"Course Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `courseName${index}`,\n              name: \"courseName\",\n              value: data.courseName,\n              onChange: e => handleInputChange(e, index),\n              children: courseOptionsForSelectedDepartment.map((course, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: course,\n                children: course\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `courseCode${index}`,\n              children: \"Course Code :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: `courseCode${index}`,\n              name: \"courseCode\",\n              value: data.courseCode,\n              onChange: e => handleInputChange(e, index),\n              children: [\" \", courseCodeOptionsForSelectedDepartment.map((courseCode, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: courseCode,\n                children: courseCode\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Thesis/Project Report Evaluation\" || data.panelType === \"Viva Exam\" ?\n          /*#__PURE__*/\n          // Render \"Number of Students\" field for other criteria, if needed\n          _jsxDEV(\"div\", {\n            className: \"form-group select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `numStudents${index}`,\n              children: \"Number of Students:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"number\",\n              className: `form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`,\n              id: `numStudents${index}`,\n              name: \"numStudents\",\n              value: data.numStudents,\n              onChange: e => handleInputChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"31\",\n                children: \"31\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"32\",\n                children: \"32\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"33\",\n                children: \"33\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"34\",\n                children: \"34\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"35\",\n                children: \"35\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"36\",\n                children: \"36\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"37\",\n                children: \"37\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"38\",\n                children: \"38\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `numHours${index}`,\n              children: \"Number of Hours of Exam:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: `numHours${index}`,\n              name: \"numHours\",\n              value: data.numHours,\n              onChange: e => handleInputChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg calculate-button\",\n        onClick: handleCalculate,\n        children: \"Prepare My Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"H7dQidiTt2lYwMCv0AydYvhrYso=\", false, function () {\n  return [useNavigate];\n});\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputForm","props","_s","navigate","numPanels","setNumPanels","selectedSemester","setSelectedSemester","selectedDepartment","setSelectedDepartment","selectName","setSelectedName","name","console","log","inputData","setInputData","panelType","type","courseName","courseCode","numStudents","numHours","tabulationType","tabulationSemester","handleNumPanelsChange","e","parseInt","target","value","prevData","newInputData","slice","newPanels","Array","length","fill","concat","handleInputChange","index","newValue","isNaN","error","alert","handlePanelTypeChange","handleCalculate","some","data","results","map","result","department","encodeURIComponent","semester","JSON","stringify","courseOptions","courseCodeOptions","courseOptionsForSelectedDepartment","courseCodeOptionsForSelectedDepartment","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","course","optionIndex","onClick","_c","$RefreshReg$"],"sources":["F:/3-1/test/my-app/ExamBill-Management-System-Final-Project--main/src/Components/InputForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../CSS/input.css';\n\nfunction InputForm(props) {\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState(1);\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectName,setSelectedName]=useState(props.name);\n  console.log(selectName);\n  const [inputData, setInputData] = useState([\n    {\n      panelType: \"Making Question Paper\",\n      type: \"Hons\",\n      courseName: \"Algorithms-I\",\n      courseCode: \"CSE-209\",\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n    },\n  \n   \n  ]);\n const handleNumPanelsChange = (e) => {\n    const numPanels = parseInt(e.target.value);\n     setInputData((prevData) => {\n      const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n      return newInputData;\n    });\n    setNumPanels(numPanels);\n    setInputData((prevData) => {\n      const newPanels = new Array(numPanels - prevData.length).fill({\n        panelType: \"Making Question Paper\",\n        type: \"Hons\",\n        courseName: \"Algorithms-I\",\n        courseCode: \"CSE-209\",\n        numStudents: 0,\n        numHours: 0,\n        tabulationType: \"Yearly\",\n        tabulationSemester: \"Final Year\",\n      });\n      return prevData.concat(newPanels);\n    });\n  };\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const newInputData = [...inputData];\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    }\n  };\n   \n \n  \n  const handlePanelTypeChange = (e, index) => {\n    const { value } = e.target;\n    const newInputData = [...inputData];\n    newInputData[index] = { ...newInputData[index], panelType: value };\n    setInputData(newInputData);\n  };\n\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n\n    const results = inputData.map((data) => {\n      let result = 0;\n     \n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        } \n      } \n   \n      return { ...data, result };\n    });\n\n    console.log(\"Results after calculation:\", results);\n\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name=encodeURIComponent(selectName);\n    console.log(\"Panel Type:\", panelType);\n\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\n      \"Algorithms-I\",\n      \"Electronic Circuits\",\n      \"Numerical Methods\",\n      \"Web Design and Programming Laboratory-I\",\n      \"Technical Writing and Presentations\",\n      \"Database Systems\",\n      \"Computational Geometry\",\n    ],\n  };\n  const courseCodeOptions = {\n    \"Computer Science and Engineering\": [\n      \"CSE-209\",\n      \"CSE-203\",\n      \"CSE-205\",\n      \"CSE-312\",\n      \"CSE-212\",\n      \"CSE-255\",\n      \"CSE-305\",\n    ],\n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  return (\n    <div className=\"container mt-4 \">\n    \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedDepartment\">Select Department:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectedDepartment}\n          onChange={(e) => setSelectedDepartment(e.target.value)}\n        >\n          <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n        </select>\n      </div>\n\n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectName\">Name:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectName}\n          onChange={(e) => setSelectedName(e.target.value)}\n        >\n          <option value={props.name}>{props.name}</option>\n        </select>\n      </div>\n      <div className=\"form-group \">\n        <label htmlFor=\"numPanels\">Select number of Panel(s):</label>\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          id=\"numPanels\"\n          value={numPanels}\n          onChange={handleNumPanelsChange}\n        />\n      </div>\n       \n\n      <div className=\"row d-flex justify-content-center \">\n        {inputData.map((data, index) => (\n          <div key={index} className=\"col-md-4 mb-3\">\n            <div className=\"panel border-secondary p-3 my-2\">\n              <h3 id=\"PanelNo\">Panel {index + 1}</h3>\n              <div className=\"form-group select-container\">\n                <label htmlFor={`panelType${index}`}>Criteria:</label>\n                <select className=\"form-control\"\n                  id={`panelType${index}`}\n                  name=\"panelType\"\n                  value={data.panelType}\n                  onChange={(e) => handlePanelTypeChange(e, index)}\n                >\n                  <option value=\"Making Question Paper\">Making Question Paper</option>\n                  <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n                  <option value=\"Question Moderation\">Question Moderation</option>\n                  <option value=\"Lab Exam\">Lab Exam</option>\n                  <option value=\"Viva Exam\">Viva Exam</option>\n                  <option value=\"Thesis/Project Report Evaluation\">Thesis/Project Report Evaluation</option>\n                  <option value=\"Stencil\">Stencil</option>\n                </select>\n              </div>\n              <div className=\"form-group select-container\">\n                <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n                <select\n                  className=\"form-control\"\n                  id={`type${index}`}\n                  name=\"type\"\n                  value={data.type}\n                  onChange={(e) => handleInputChange(e, index)}\n                >\n                  <option value=\"Hons\">Hons</option>\n                  <option value=\"Masters\">Masters</option>\n                  <option value=\"MPhil\">MPhil</option>\n                  <option value=\"PhD\">PhD</option>\n                </select>\n              </div>\n              <div className=\"form-group select-container\">\n              <label htmlFor={`courseName${index}`}>Course Name:</label>\n              <select\n                className=\"form-control\"\n                id={`courseName${index}`}\n                name=\"courseName\"\n                value={data.courseName}\n                onChange={(e) => handleInputChange(e, index)}\n              >\n                {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n                  <option key={optionIndex} value={course}>\n                    {course}\n                  </option>\n                ))}\n              </select>\n            </div>\n              <div className=\"form-group select-container\">\n                <label htmlFor={`courseCode${index}`}>Course Code :</label>\n                <select\n                  className=\"form-control\"\n                  id={`courseCode${index}`}\n                  name=\"courseCode\"\n                  value={data.courseCode}\n                  onChange={(e) => handleInputChange(e, index)}\n                > {courseCodeOptionsForSelectedDepartment.map((courseCode, optionIndex) => (\n                  <option key={optionIndex} value={courseCode}>\n                    {courseCode}\n                  </option>\n                ))} \n                </select>\n              </div>\n              {data.panelType === \"Evaluating Answer Scripts\" ||\n                data.panelType === \"Thesis/Project Report Evaluation\" ||\n                data.panelType === \"Viva Exam\" ? (\n                  // Render \"Number of Students\" field for other criteria, if needed\n                  <div className=\"form-group select-container\">\n                    <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n                    <select\n                      type=\"number\"\n                      className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n                      id={`numStudents${index}`}\n                      name=\"numStudents\"\n                      value={data.numStudents}\n                      onChange={(e) => handleInputChange(e, index)}\n                      >\n                        <option value=\"0\">0</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"31\">31</option>\n                        <option value=\"32\">32</option>\n                        <option value=\"33\">33</option>\n                        <option value=\"34\">34</option>\n                        <option value=\"35\">35</option>\n                        <option value=\"36\">36</option>\n                        <option value=\"37\">37</option>\n                        <option value=\"38\">38</option>\n                    </select>\n                   \n                  </div>\n                ) : null}\n\n            \n              <div className=\"form-group\">\n                <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={`numHours${index}`}\n                  name=\"numHours\"\n                  value={data.numHours}\n                  onChange={(e) => handleInputChange(e, index)}\n                />\n                \n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"text-center\"> {/* Center-align the button */}\n        <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n          Prepare My Bill\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}