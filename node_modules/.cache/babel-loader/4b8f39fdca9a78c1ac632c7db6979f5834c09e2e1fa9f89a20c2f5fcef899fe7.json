{"ast":null,"code":"var _jsxFileName = \"F:\\\\3-1\\\\test\\\\my-app\\\\ExamBill-Management-System-Final-Project--main\\\\src\\\\Components\\\\InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm(props) {\n  _s();\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState();\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [currentSemester, setCurrentSemester] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectedType, setSelectedType] = useState(\"Hons\");\n  const [selectName, setSelectedName] = useState(props.name);\n  const [inputData, setInputData] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  const [selectedPanelTypes, setSelectedPanelTypes] = useState([]);\n  const addCoursePanel = courseName => {\n    const courseCode = courseToCodeMapping[courseName];\n    const newPanel = {\n      panelType: \"\",\n      type: \"Hons\",\n      courseName,\n      courseCode,\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n      daysOfExam: \"\"\n    };\n    setInputData(prevData => [...prevData, newPanel]);\n  };\n  const removeCoursePanel = courseName => {\n    setInputData(prevData => prevData.filter(panel => panel.courseName !== courseName));\n  };\n  const handleCourseChange = e => {\n    const selectedCourse = e.target.value;\n    const isChecked = e.target.checked;\n    setSelectedCoursesBySemester(prevSelectedCourses => ({\n      ...prevSelectedCourses,\n      [currentSemester]: isChecked ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse] : (prevSelectedCourses[currentSemester] || []).filter(course => course !== selectedCourse)\n    }));\n    if (isChecked) {\n      setSelectedCourses([...selectedCourses, selectedCourse]);\n      addCoursePanel(selectedCourse);\n    } else {\n      setSelectedCourses(selectedCourses.filter(course => course !== selectedCourse));\n      removeCoursePanel(selectedCourse);\n    }\n  };\n  const handleSemesterChange = newSemester => {\n    setSelectedSemester(newSemester);\n    setCurrentSemester(newSemester);\n    setInputData([]);\n    setSelectedCourses([]); // Clear the selected courses when the semester changes\n  };\n\n  const handlePanelTypeChange = (e, panelType, index) => {\n    const {\n      checked\n    } = e.target;\n    const newInputData = [...inputData];\n\n    // If the checkbox is checked, add the panelType to the array\n    if (checked) {\n      newInputData[index] = {\n        ...newInputData[index],\n        panelType: [...newInputData[index].panelType, panelType]\n      };\n    } else {\n      // If the checkbox is unchecked, remove the panelType from the array\n      newInputData[index] = {\n        ...newInputData[index],\n        panelType: newInputData[index].panelType.filter(type => type !== panelType)\n      };\n    }\n    setInputData(newInputData);\n  };\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newInputData = [...inputData];\n    if (name === \"numStudents\" || name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n    if (name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Selecting Days Of Exam is manadatory.\");\n      }\n    }\n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: newValue\n        };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = {\n          ...newInputData[index],\n          [name]: value\n        };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = {\n        ...newInputData[index],\n        [name]: value\n      };\n      setInputData(newInputData);\n    }\n  };\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n    const results = inputData.map(data => {\n      let result = 0;\n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        }\n      }\n      return {\n        ...data,\n        result\n      };\n    });\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name = encodeURIComponent(selectName);\n    const type = encodeURIComponent(selectedType);\n    console.log(\"Panel Type:\", panelType);\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\"Algorithms-I\", \"Algorithms-I-Lab\", \"Electronic Circuits\", \"Numerical Methods\", \"Web Design and Programming Laboratory-I\", \"Technical Writing and Presentations\", \"Database Systems\", \"Computational Geometry\", \"Structured Programming Language\", \"Java\"]\n  };\n  const courseToCodeMapping = {\n    \"Structured Programming Language\": \"CSE-105\",\n    \"Structured Programming Language-Lab\": \"CSE-106\",\n    \"Data Structures\": \"CSE 153\",\n    \"Data Structures Lab\": \"CSE 154\",\n    \"Discrete Mathematics\": \"CSE-155\",\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-107\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\": \"CSE-312\",\n    \"Technical Writing and Presentations\": \"CSE-112\",\n    \"Database Systems\": \"CSE-255\",\n    \"Computational Geometry\": \"CSE-305\",\n    \"Java\": \"CSE-212\",\n    \"Operating Systems\": \"CSE-309\",\n    \"Operating Systems Lab\": \"CSE-310\"\n  };\n  const semesterToCoursesMapping = {\n    \"1st Year 1st Semester\": [\"Structured Programming Language\", \"Structured Programming Language-Lab\", \"Electronic Circuits\"],\n    \"1st Year 2nd Semester\": [\"Data Structures\", \"Data Structures Lab\", \"Discrete Mathematics\", \"Technical Writing and Presentations\"],\n    \"2nd Year 1st Semester\": [\"Algorithms-I\", \"Algorithms-I-Lab\", \"Numerical Methods\", \"Java\"],\n    \"3rd Year 1st Semester\": [\"Web Design and Programming Laboratory-I\", \"Computational Geometry\", \"Operating Systems\", \"Operating Systems Lab\"]\n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedDepartment\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectedDepartment,\n        onChange: e => setSelectedDepartment(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Computer Science and Engineering\",\n          children: \"Computer Science and Engineering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectName\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedDepartment\",\n        value: selectName,\n        onChange: e => setSelectedName(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: props.name,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedCourseType\",\n        children: \"Select Course Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedType\",\n        value: selectedType,\n        onChange: e => setSelectedType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hons\",\n          children: \"Hons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Msc\",\n          children: \"Msc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectedSemester\",\n        children: \"Select Semester:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        id: \"selectedSemester\",\n        value: selectedSemester,\n        onChange: e => {\n          setSelectedSemester(e.target.value);\n          setCurrentSemester(e.target.value); // Update current semester when selected\n          setInputData([]); // Clear panels when the semester changes\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 1st Semester\",\n          children: \"1st Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1st Year 2nd Semester\",\n          children: \"1st Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 1st Semester\",\n          children: \"2nd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2nd Year 2nd Semester\",\n          children: \"2nd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 1st Semester\",\n          children: \"3rd Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3rd Year 2nd Semester\",\n          children: \"3rd Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 1st Semester\",\n          children: \"4th Year 1st Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4th Year 2nd Semester\",\n          children: \"4th Year 2nd Semester\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"courseSelect\",\n        children: \"Select Courses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-checkboxes\",\n        children: courseOptionsForSelectedSemester.map((course, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"selectedCourse\",\n            value: course,\n            onChange: handleCourseChange,\n            checked: selectedCourses.includes(course),\n            className: \"checkbox-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 9\n          }, this), course]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 10\n    }, this), selectedCourses.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: inputData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" p-3 my-2\",\n            style: {\n              backgroundColor: 'rgb(209, 208, 208)',\n              borderRadius: '10px',\n              borderWidth: '10px',\n              borderColor: 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"PanelNo\",\n              children: [\"# \", data.courseName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `courseName${index}`,\n                children: \"Course Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control \",\n                id: `courseName${index}`,\n                name: \"courseName\",\n                value: data.courseName,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `courseCode${index}`,\n                children: \"Course Code:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: `courseCode${index}`,\n                name: \"courseCode\",\n                value: data.courseCode,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-container criteriaSelectHeading\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"checkbox-label\",\n                style: {\n                  backgroundColor: 'white'\n                },\n                children: \"Criteria Of Work:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"criteriaSelect\",\n                children: [\"Making Question Paper\", \"Evaluating Answer Scripts\", \"Question Moderation\", \"Lab Exam\", \"Viva Exam\", \"Stencil\"].map((panelType, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: `panelType${idx}`,\n                    name: \"panelType\",\n                    value: panelType,\n                    checked: data.panelType.includes(panelType),\n                    onChange: e => handlePanelTypeChange(e, panelType, index),\n                    className: \"checkbox-input criteriaSelect\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `panelType${idx}`,\n                    children: panelType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 7\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 5\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 1\n            }, this), data.panelType.includes(\"Stencil\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `stencilPages${index}`,\n                children: \"Number of Stencil Pages (1-3):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `stencilPages${index}`,\n                name: \"stencilPages\",\n                value: data.stencilPages,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 3\n            }, this) : null, data.panelType.includes(\"Evaluating Answer Scripts\") || data.panelType.includes(\"Viva Exam\") ?\n            /*#__PURE__*/\n            // Render \"Number of Students\" field for other criteria, if needed\n            _jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `numStudents${index}`,\n                children: \"Number of Students:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: `form-control${data.panelType.includes(\"Evaluating Answer Scripts\") || data.panelType.includes(\"Viva Exam\") ? \" mandatory\" : \"\"}`,\n                id: `numStudents${index}`,\n                name: \"numStudents\",\n                value: data.numStudents,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"31\",\n                  children: \"31\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"32\",\n                  children: \"32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"33\",\n                  children: \"33\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"34\",\n                  children: \"34\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"35\",\n                  children: \"35\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"36\",\n                  children: \"36\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"37\",\n                  children: \"37\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"38\",\n                  children: \"38\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 3\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `numHours${index}`,\n                children: \"Number of Hours of Exam:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `numHours${index}`,\n                name: \"numHours\",\n                value: data.numHours,\n                onChange: e => handleInputChange(e, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"6\",\n                  children: \"6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 1\n            }, this), data.panelType.includes(\"Lab Exam\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group select-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `daysOfExam${index}`,\n                children: \"Days of Exam:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: `daysOfExam${index}`,\n                name: \"daysOfExam\",\n                value: data.daysOfExam,\n                onChange: e => handleInputChange(e, index),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 3\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg calculate-button\",\n        onClick: handleCalculate,\n        children: \"Prepare My Bill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(InputForm, \"kQJdojhp9lq01oNY4CSTRoa5mSo=\", false, function () {\n  return [useNavigate];\n});\n_c = InputForm;\nexport default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   console.log(selectName);\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter(panel => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     if (isChecked) {\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n//          <div className=\"form-group select-container\">\n//         <label htmlFor=\"courseSelect\">Select Courses:</label>\n//         <select className=\"form-control\" id=\"courseSelect\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <option key={optionIndex} value={course}>\n//               {course}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"course-radio-buttons\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <label key={optionIndex}>\n//               <input\n//                 type=\"radio\"\n//                 name=\"selectedCourse\"\n//                 value={course}\n//                 onChange={handleCourseChange}\n//               />\n//               {course}\n//             </label>\n//           ))}\n//         </div>\n//       </div>\n\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n\n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 29/10/23\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam:\"--\",\n//     },\n\n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); \n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n\n//     const newInputData = [...inputData];\n\n//     if (name === \"courseName\") {\n\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// Oct 10:40pm\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30/10/23/12AM\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [coursePanelCounts, setCoursePanelCounts] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n\n//     // Initialize the count to 1 if it doesn't exist or increment it by 1 if it exists\n//     setCoursePanelCounts((prevCounts) => ({\n//       ...prevCounts,\n//       [courseCode]: (prevCounts[courseCode] || 0) +1 ,\n//     }));\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n\n//     if (coursePanelCounts[courseCode] > 0) {\n//       // Decrement the count by 1 if it exists\n//       setCoursePanelCounts((prevCounts) => ({\n//         ...prevCounts,\n//         [courseCode]: prevCounts[courseCode] - 1,\n//       }));\n\n//       setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//     }\n//   };\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n\n//     if (value === \"Evaluating Answer Scripts\" || value === \"Viva Exam\") {\n//       newInputData[index].numStudents = 0; // Set an initial value\n//     } else {\n//       delete newInputData[index].numStudents; // Remove the value if not applicable\n//     }\n\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//           {/* Display the current panel count for this course */}\n//     {coursePanelCounts[courseToCodeMapping[course]] || 0}\n//     <button onClick={() => addCoursePanel(course)}>+</button>\n//     <button onClick={() => removeCoursePanel(course)}>-</button>\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" || data.panelType === \"Making Question + Evaluating Answer Scripts\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30thOct,8:22\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// failed_attempt_to_display_checkboxes\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [selectedCriteria, setSelectedCriteria] = useState([]);\n\n//   const addCriteria =(panelType,course,index) => {\n//     const courseCode=courseToCodeMapping[course]; \n//   //  { inputData.map((data, index) => (\n//     if( panelType === \"Evaluating Answer Scripts\" ||\n//                 panelType === \"Thesis/Project Report Evaluation\" ||\n//                 panelType === \"Viva Exam\" ){\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${inputData[index]}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${inputData[index].panelType === \"Evaluating Answer Scripts\" || inputData[index].panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${inputData[index]}`}\n//                       name=\"numStudents\"\n//                       value={inputData[index].numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 }\n\n//   };\n//   const handleCheckboxChange = (e, course, panelType,index) => {\n//     const ischecked = e.target.checked;\n//     const selectedCriteria_s=e.target.value;\n//     setSelectedCriteria((prevSelectedCriteria) => ({\n//       ...prevSelectedCriteria,\n\n//     }));\n\n//     if (ischecked) {\n\n//       setSelectedCriteria([...selectedCriteria,selectedCriteria_s]);\n//       addCriteria( panelType,course,index);\n\n//     } else {\n//       setSelectedCriteria(selectedCriteria.filter((panelType) =>panelType !== selectedCriteria_s));\n\n//     }\n\n//   };\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n\n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n\n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n\n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n\n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const criteriaOptions=[\n//     \"Making Question Paper\",\"Evaluating Answer Scripts\",\"Lab Exam\",\"Question Moderation\",\"Stencil\",\n//   ];\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n\n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n\n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n\n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n//   const criteriaOptionsForSelectedCourse=criteriaOptions|| [];\n\n//   return (\n//     <div className=\"container mt-4 \">\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n\n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor=\"criteriaSelect\">Select Criteria:</label>\n//   <div className=\"criteriacheckboxes\">\n// {criteriaOptionsForSelectedCourse.map((criteria,optionIndex) => (\n//   <label key={optionIndex} className=\"checkbox-label\">\n//   <input\n//     type=\"checkbox\"\n//     name=\"selectedCriteria_s\"\n//     value={criteria}\n//     onChange={(e) => handleCheckboxChange(e, data.courseName, data.panelType,index)}\n//     checked={selectedCriteria.includes(criteria)}\n//     className=\"checkbox-input\"\n//   />\n//   {criteria}\n//   </label>\n//   // Render the label and other information for the criteria here\n// ))\n\n// }\n//    </div>\n// </div>       \n\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n\n//                   </div>\n//                 ) : null}\n\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n\n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InputForm","props","_s","navigate","numPanels","setNumPanels","selectedSemester","setSelectedSemester","currentSemester","setCurrentSemester","selectedDepartment","setSelectedDepartment","selectedType","setSelectedType","selectName","setSelectedName","name","inputData","setInputData","selectedCourses","setSelectedCourses","selectedCoursesBySemester","setSelectedCoursesBySemester","selectedPanelTypes","setSelectedPanelTypes","addCoursePanel","courseName","courseCode","courseToCodeMapping","newPanel","panelType","type","numStudents","numHours","tabulationType","tabulationSemester","daysOfExam","prevData","removeCoursePanel","filter","panel","handleCourseChange","e","selectedCourse","target","value","isChecked","checked","prevSelectedCourses","course","handleSemesterChange","newSemester","handlePanelTypeChange","index","newInputData","handleInputChange","newValue","parseInt","isNaN","console","error","alert","handleCalculate","some","data","stencilPages","results","map","result","log","department","encodeURIComponent","semester","JSON","stringify","courseOptions","semesterToCoursesMapping","courseOptionsForSelectedDepartment","courseOptionsForSelectedSemester","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","optionIndex","includes","length","style","backgroundColor","borderRadius","borderWidth","borderColor","readOnly","idx","required","onClick","_c","$RefreshReg$"],"sources":["F:/3-1/test/my-app/ExamBill-Management-System-Final-Project--main/src/Components/InputForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './input.css';\n\nfunction InputForm(props) {\n  const navigate = useNavigate();\n  const [numPanels, setNumPanels] = useState();\n  const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n  const [currentSemester, setCurrentSemester] = useState();\n  const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n  const [selectedType, setSelectedType] = useState(\"Hons\");\n  const [selectName,setSelectedName]=useState(props.name);\n  const [inputData, setInputData] = useState([]);\n  const [selectedCourses, setSelectedCourses] = useState([]); \n  const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  const [selectedPanelTypes, setSelectedPanelTypes] = useState([]);\n\n  \n  const addCoursePanel = (courseName) => {\n    const courseCode = courseToCodeMapping[courseName];\n    const newPanel = {\n      panelType:\"\",\n      type: \"Hons\",\n      courseName,\n      courseCode,\n      numStudents: 0,\n      numHours: 0,\n      tabulationType: \"Yearly\",\n      tabulationSemester: \"Final Year\",\n      daysOfExam: \"\",\n    };\n    setInputData((prevData) => [...prevData, newPanel]);\n  };\n\n  const removeCoursePanel = (courseName) => {\n    setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n  };\n\n  const handleCourseChange = (e) => {\n    const selectedCourse = e.target.value;\n    const isChecked = e.target.checked;\n\n    setSelectedCoursesBySemester((prevSelectedCourses) => ({\n      ...prevSelectedCourses,\n      [currentSemester]: isChecked\n        ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n        : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n    }));\n\n    if (isChecked) {\n      setSelectedCourses([...selectedCourses, selectedCourse]);\n      addCoursePanel(selectedCourse);\n    } else {\n      setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n      removeCoursePanel(selectedCourse);\n    }\n  };\n\n  const handleSemesterChange = (newSemester) => {\n    setSelectedSemester(newSemester);\n    setCurrentSemester(newSemester);\n    setInputData([]);\n    setSelectedCourses([]); // Clear the selected courses when the semester changes\n  }; \n  \n  const handlePanelTypeChange = (e, panelType,index) => {\n    const { checked } = e.target;\n    const newInputData = [...inputData];\n  \n    // If the checkbox is checked, add the panelType to the array\n    if (checked) {\n      newInputData[index] = {\n        ...newInputData[index],\n        panelType: [...newInputData[index].panelType, panelType],\n      };\n    } else {\n      // If the checkbox is unchecked, remove the panelType from the array\n      newInputData[index] = {\n        ...newInputData[index],\n        panelType: newInputData[index].panelType.filter((type) => type !== panelType),\n      };\n    }\n  \n    setInputData(newInputData);\n  };\n  \n\n\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const newInputData = [...inputData];\n   \n\n    if (name === \"numStudents\"|| name === \"numHours\") {\n      // Remove the old values for numStudents or numHours\n      delete newInputData[index][name];\n      setInputData(newInputData);\n    }\n    if (name === \"stencilPages\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n      }\n    }\n\n    if (name === \"daysOfExam\" ) {\n        const newValue = parseInt(value,10);\n        if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n        }\n        else {\n          console.error(\"Selecting Days Of Exam is manadatory.\");\n        }\n    }\n    \n    if (name === \"numHours\" || name === \"daysOfExam\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid input. Enter a number between 1 and 4.\");\n      }\n    }\n\n    if (name === \"numHours\") {\n      const newValue = parseInt(value, 10);\n      if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n        newInputData[index] = { ...newInputData[index], [name]: newValue };\n        setInputData(newInputData);\n      } else {\n        console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n      }\n    } else if (name === \"numStudents\") {\n      if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n        alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      } else {\n        newInputData[index] = { ...newInputData[index], [name]: value };\n        setInputData(newInputData);\n      }\n    } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    } else {\n      newInputData[index] = { ...newInputData[index], [name]: value };\n      setInputData(newInputData);\n    }\n  };\n   \n \n  \n \n\n  const handleCalculate = () => {\n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n    \n    if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n      alert(\"Number of Students is mandatory for Viva Exam.\");\n      return;\n    }\n \n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n      alert(\"Number of Days is mandatory for Lab Exam.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n      alert(\"Number of Pages is mandatory for Stencil.\");\n      return;\n    }\n\n    if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n      alert(\"Number of Hours is mandatory for Making Question Paper.\");\n      return;\n    }\n\n    const results = inputData.map((data) => {\n      let result = 0;\n     \n      if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n        if (data.numStudents === 0) {\n          alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n        } \n      } \n   \n      return { ...data, result };\n    });\n\n    console.log(\"Results after calculation:\", results);\n    const panelType = inputData[0].panelType;\n    const department = encodeURIComponent(selectedDepartment);\n    const semester = encodeURIComponent(selectedSemester);\n    const name=encodeURIComponent(selectName);\n    const type=encodeURIComponent(selectedType);\n    console.log(\"Panel Type:\", panelType);\n\n    navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n  };\n  const courseOptions = {\n    \"Computer Science and Engineering\": [\n      \"Algorithms-I\",\n      \"Algorithms-I-Lab\",\n      \"Electronic Circuits\",\n      \"Numerical Methods\",\n      \"Web Design and Programming Laboratory-I\",\n      \"Technical Writing and Presentations\",\n      \"Database Systems\",\n      \"Computational Geometry\",\n      \"Structured Programming Language\",\n      \"Java\",\n    ],\n  };\n\n  const courseToCodeMapping = {\n    \"Structured Programming Language\":\"CSE-105\",\n    \"Structured Programming Language-Lab\": \"CSE-106\",\n    \"Data Structures\":\"CSE 153\",\n    \"Data Structures Lab\":\"CSE 154\",\n    \"Discrete Mathematics\":\"CSE-155\",\n    \"Algorithms-I\": \"CSE-209\",\n    \"Algorithms-I-Lab\": \"CSE-210\",\n    \"Electronic Circuits\": \"CSE-107\",\n    \"Numerical Methods\": \"CSE-205\",\n    \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n    \"Technical Writing and Presentations\":\"CSE-112\",\n    \"Database Systems\":\"CSE-255\",\n    \"Computational Geometry\":\"CSE-305\",\n    \"Java\":\"CSE-212\",\n    \"Operating Systems\":\"CSE-309\",\n    \"Operating Systems Lab\":\"CSE-310\",\n   \n  };\n\n  const semesterToCoursesMapping = {\n    \"1st Year 1st Semester\": [\n      \"Structured Programming Language\",\n      \"Structured Programming Language-Lab\",\n      \"Electronic Circuits\",\n  \n    ],\n    \"1st Year 2nd Semester\": [\n      \"Data Structures\",\n      \"Data Structures Lab\",\n      \"Discrete Mathematics\",\n      \"Technical Writing and Presentations\"\n    ],\n\n    \"2nd Year 1st Semester\": [\n      \"Algorithms-I\",\n      \"Algorithms-I-Lab\",\n      \"Numerical Methods\",\n      \"Java\",\n    ],\n\n    \"3rd Year 1st Semester\": [\n      \"Web Design and Programming Laboratory-I\",\n      \"Computational Geometry\",\n      \"Operating Systems\",\n      \"Operating Systems Lab\",\n    ],\n   \n  };\n  const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n  return (\n    <div className=\"container mt-4 \">\n    \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedDepartment\">Select Department:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectedDepartment}\n          onChange={(e) => setSelectedDepartment(e.target.value)}\n        >\n          <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n        </select>\n      </div>\n\n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectName\">Name:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedDepartment\"\n          value={selectName}\n          onChange={(e) => setSelectedName(e.target.value)}\n        >\n          <option value={props.name}>{props.name}</option>\n        </select>\n      </div>\n       \n      <div className=\"form-group select-container\">\n        <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n        <select\n          className=\"form-control\"\n          id=\"selectedType\"\n          value={selectedType}\n          onChange={(e) => setSelectedType(e.target.value)}\n        >\n          <option value=\"Hons\">Hons</option>\n          <option value=\"Msc\">Msc</option>\n          {/* Add more course type options as needed */}\n        </select>\n      </div>\n    \n     \n      <div className=\"form-group select-container\">\n         <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n         <select\n          className=\"form-control\"\n          id=\"selectedSemester\"\n          value={selectedSemester}\n          onChange={(e) => {\n            setSelectedSemester(e.target.value);\n            setCurrentSemester(e.target.value); // Update current semester when selected\n            setInputData([]); // Clear panels when the semester changes\n          }}\n        >\n          <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n           <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n           <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n           <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n           <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n           <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n           <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n         </select>\n         </div>\n         \n\n         <div className=\"form-group select-container\">\n  <label htmlFor=\"courseSelect\">Select Courses:</label>\n  <div className=\"course-checkboxes\">\n    {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n      <label key={optionIndex} className=\"checkbox-label\">\n        <input\n       \n          type=\"checkbox\"\n          name=\"selectedCourse\"\n          value={course}\n          onChange={handleCourseChange}\n          checked={selectedCourses.includes(course)}\n          className=\"checkbox-input\"\n        />\n        {course}\n      </label>\n    ))}\n  </div>\n</div>\n       \n\n      {selectedCourses.length > 0 && (\n      <div className=\"panel-border\">\n      <div className=\"row d-flex justify-content-center\">\n        {inputData.map((data, index) => (\n          <div key={index} className=\"col-md-6 mb-4\">\n            <div className=\" p-3 my-2\"style={{backgroundColor:'rgb(209, 208, 208)',borderRadius:'10px',borderWidth:'10px',borderColor:'black'}}>\n              <h3 id=\"PanelNo\"># {data.courseName}</h3>\n              \n            \n   <div className=\"form-group select-container\">\n  <label htmlFor={`courseName${index}`}>Course Name:</label>\n  <input\n    type=\"text\"\n    className=\"form-control \"\n    id={`courseName${index}`}\n    name=\"courseName\"\n    value={data.courseName}\n    readOnly\n  />\n  </div>\n\n<div className=\"form-group select-container\">\n  <label htmlFor={`courseCode${index}`}>Course Code:</label>\n  <input\n    type=\"text\"\n    className=\"form-control\"\n    id={`courseCode${index}`}\n    name=\"courseCode\"\n    value={data.courseCode}\n    readOnly\n  />\n</div>\n<div className=\"form-group checkbox-container criteriaSelectHeading\" >\n  <label className=\"checkbox-label\" style={{backgroundColor:'white'}}>Criteria Of Work:</label>\n  <div className=\"criteriaSelect\">\n  {[\"Making Question Paper\", \"Evaluating Answer Scripts\", \"Question Moderation\", \"Lab Exam\", \"Viva Exam\", \"Stencil\"].map((panelType, idx) => (\n    <div key={idx}>\n      <input\n        type=\"checkbox\"\n        id={`panelType${idx}`}\n        name=\"panelType\"\n        value={panelType}\n        checked={data.panelType.includes(panelType)}\n        onChange={(e) => handlePanelTypeChange(e, panelType,index)}\n        className=\"checkbox-input criteriaSelect\"\n      />\n      <label htmlFor={`panelType${idx}`}>{panelType}</label>\n    </div>\n  ))}\n  </div>\n</div>\n\n\n{data.panelType.includes(\"Stencil\") ? (\n  <div className=\"form-group select-container\">\n    <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n    <select\n      type=\"number\"\n      className=\"form-control\"\n      id={`stencilPages${index}`}\n      name=\"stencilPages\"\n      value={data.stencilPages}\n      onChange={(e) => handleInputChange(e, index)}\n    >\n      <option value=\"0\">--</option>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n    </select>\n  </div>\n) : null}\n\n{data.panelType.includes(\"Evaluating Answer Scripts\") || data.panelType.includes(\"Viva Exam\") ? (\n  // Render \"Number of Students\" field for other criteria, if needed\n  <div className=\"form-group select-container\">\n    <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n    <select\n      type=\"number\"\n      className={`form-control${data.panelType.includes(\"Evaluating Answer Scripts\") || data.panelType.includes(\"Viva Exam\") ? \" mandatory\" : \"\"}`}\n      id={`numStudents${index}`}\n      name=\"numStudents\"\n      value={data.numStudents}\n      onChange={(e) => handleInputChange(e, index)}\n    >\n      <option value=\"0\">0</option>\n      <option value=\"10\">10</option>\n      <option value=\"20\">20</option>\n      <option value=\"30\">30</option>\n      <option value=\"31\">31</option>\n      <option value=\"32\">32</option>\n      <option value=\"33\">33</option>\n      <option value=\"34\">34</option>\n      <option value=\"35\">35</option>\n      <option value=\"36\">36</option>\n      <option value=\"37\">37</option>\n      <option value=\"38\">38</option>\n    </select>\n  </div>\n) : null}\n\n<div className=\"form-group select-container\">\n                <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n                 <select\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={`numHours${index}`}\n                  name=\"numHours\"\n                  value={data.numHours}\n                  onChange={(e) => handleInputChange(e, index)}\n                > \n                  <option value=\"0\">--</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n\n                </select>\n                \n              </div>\n\n{data.panelType.includes(\"Lab Exam\") ? (\n  <div className=\"form-group select-container\">\n    <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n    <select\n      type=\"number\"\n      className=\"form-control\"\n      id={`daysOfExam${index}`}\n      name=\"daysOfExam\"\n      value={data.daysOfExam}\n      onChange={(e) => handleInputChange(e, index)}\n      required\n    >\n      <option value=\"0\">--</option>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n    </select>\n  </div>\n) : null}\n\n            </div>\n          </div>\n        ))}\n      </div>\n      </div>\n       )}\n      <div className=\"text-center\"> {/* Center-align the button */}\n        <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n          Prepare My Bill\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InputForm;\n\n\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   console.log(selectName);\n  \n  \n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter(panel => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     if (isChecked) {\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n \n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n   \n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n//          <div className=\"form-group select-container\">\n//         <label htmlFor=\"courseSelect\">Select Courses:</label>\n//         <select className=\"form-control\" id=\"courseSelect\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <option key={optionIndex} value={course}>\n//               {course}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"course-radio-buttons\">\n//           {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//             <label key={optionIndex}>\n//               <input\n//                 type=\"radio\"\n//                 name=\"selectedCourse\"\n//                 value={course}\n//                 onChange={handleCourseChange}\n//               />\n//               {course}\n//             </label>\n//           ))}\n//         </div>\n//       </div>\n   \n       \n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//     },\n  \n   \n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); // Keep only the first `numPanels` panels\n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n//       // If the courseName is changed, set the corresponding course code\n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 100) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of pages. Enter a number between 1 and 100.\");\n//       }\n//     }\n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\") {\n//       // Remove the old value for daysOfExam\n//       delete newInputData[index].daysOfExam;\n//       setInputData(newInputData);\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages>3)) {\n//       alert(\"Number of Pages should be <=3.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\">Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//           <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//          <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//        </div>\n       \n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n       \n\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 />\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   />\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n\n// 29/10/23\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState(1);\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   console.log(selectName);\n  \n//   const [inputData, setInputData] = useState([\n//     {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName: \"Algorithms-I\",\n//       courseCode: \"CSE-209\",\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam:\"--\",\n//     },\n  \n   \n//   ]);\n//  const handleNumPanelsChange = (e) => {\n//     const numPanels = parseInt(e.target.value);\n//      setInputData((prevData) => {\n//       const newInputData = prevData.slice(0, numPanels); \n//       return newInputData;\n//     });\n//     setNumPanels(numPanels);\n//     setInputData((prevData) => {\n//       const newPanels = new Array(numPanels - prevData.length).fill({\n//         panelType: \"Making Question Paper\",\n//         type: \"Hons\",\n//         courseName: \"Algorithms-I\",\n//         courseCode: \"CSE-209\",\n//         numStudents: 0,\n//         numHours: 0,\n//         tabulationType: \"Yearly\",\n//         tabulationSemester: \"Final Year\",\n//         daysOfExam:\"--\",\n//       });\n//       return prevData.concat(newPanels);\n//     });\n//   };\n\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n   \n//     const newInputData = [...inputData];\n    \n//     if (name === \"courseName\") {\n     \n//       const courseCode = courseToCodeMapping[value];\n//       newInputData[index] = { ...newInputData[index], courseName: value, courseCode };\n//       setInputData(newInputData);\n//     } \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const courseCodeOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"CSE-209\",\n//       \"CSE-203\",\n//       \"CSE-205\",\n//       \"CSE-312\",\n//       \"CSE-212\",\n//       \"CSE-255\",\n//       \"CSE-305\",\n//       \"CSE-212\",\n//       \"CSE-107\",\n//       \"CSE-105\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-203\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Java\":\"CSE-212\",\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseCodeOptionsForSelectedDepartment = courseCodeOptions[selectedDepartment] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => setSelectedSemester(e.target.value)}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n\n//       <div className=\"form-group \">\n//         <label htmlFor=\"numPanels\">Select Number of Panel(s):</label>\n//         <input\n//           type=\"number\"\n//           className=\"form-control\"\n//           id=\"numPanels\"\n//           value={numPanels}\n//           onChange={handleNumPanelsChange}\n//         />\n//       </div>\n       \n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {index + 1}</h3>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`type${index}`}>Type (Hons/Masters/MPhil/PhD):</label>\n//                 <select\n//                   className=\"form-control\"\n//                   id={`type${index}`}\n//                   name=\"type\"\n//                   value={data.type}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 >\n//                   <option value=\"Hons\">Hons</option>\n//                   <option value=\"Masters\">Masters</option>\n//                   <option value=\"MPhil\">MPhil</option>\n//                   <option value=\"PhD\">PhD</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group select-container\">\n//               <label htmlFor={`courseName${index}`}>Course Name:</label>\n//               <select\n//                 className=\"form-control\"\n//                 id={`courseName${index}`}\n//                 name=\"courseName\"\n//                 value={data.courseName}\n//                 onChange={(e) => handleInputChange(e, index)}\n//               >\n//                 {courseOptionsForSelectedDepartment.map((course, optionIndex) => (\n//                   <option key={optionIndex} value={course}>\n//                     {course}\n//                   </option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"form-group select-container\">\n//                 <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id={`courseCode${index}`}\n//                   name=\"courseCode\"\n//                   value={data.courseCode}\n//                   readOnly\n//                 />\n//               </div>\n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// Oct 10:40pm\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  \n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// 30/10/23/12AM\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [coursePanelCounts, setCoursePanelCounts] = useState({});\n\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n  \n//     // Initialize the count to 1 if it doesn't exist or increment it by 1 if it exists\n//     setCoursePanelCounts((prevCounts) => ({\n//       ...prevCounts,\n//       [courseCode]: (prevCounts[courseCode] || 0) +1 ,\n//     }));\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n  \n\n//   const removeCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n  \n//     if (coursePanelCounts[courseCode] > 0) {\n//       // Decrement the count by 1 if it exists\n//       setCoursePanelCounts((prevCounts) => ({\n//         ...prevCounts,\n//         [courseCode]: prevCounts[courseCode] - 1,\n//       }));\n  \n//       setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//     }\n//   };\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"||name === \"numStudents\" || name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n  \n//     if (value === \"Evaluating Answer Scripts\" || value === \"Viva Exam\") {\n//       newInputData[index].numStudents = 0; // Set an initial value\n//     } else {\n//       delete newInputData[index].numStudents; // Remove the value if not applicable\n//     }\n  \n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//           {/* Display the current panel count for this course */}\n//     {coursePanelCounts[courseToCodeMapping[course]] || 0}\n//     <button onClick={() => addCoursePanel(course)}>+</button>\n//     <button onClick={() => removeCoursePanel(course)}>-</button>\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseCode}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n                 \n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" || data.panelType === \"Making Question + Evaluating Answer Scripts\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-conatiner\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n\n// 30thOct,8:22\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n  \n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`panelType${index}`}>Criteria Of Work:</label>\n//                 <select className=\"form-control\"\n//                   id={`panelType${index}`}\n//                   name=\"panelType\"\n//                   value={data.panelType}\n//                   onChange={(e) => handlePanelTypeChange(e, index)}\n//                 >\n//                   <option value=\"Making Question Paper\">Making Question Paper</option>\n//                   <option value=\"Evaluating Answer Scripts\">Evaluating Answer Scripts</option>\n//                   <option value=\"Question Moderation\">Question Moderation</option>\n//                   <option value=\"Lab Exam\">Lab Exam</option>\n//                   <option value=\"Viva Exam\">Viva Exam</option>\n//                   <option value=\"Stencil\">Stencil</option>\n//                 </select>\n//               </div>\n           \n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;\n\n// failed_attempt_to_display_checkboxes\n\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './input.css';\n\n// function InputForm(props) {\n//   const navigate = useNavigate();\n//   const [numPanels, setNumPanels] = useState();\n//   const [selectedSemester, setSelectedSemester] = useState(\"1st Year 1st Semester\");\n//   const [currentSemester, setCurrentSemester] = useState();\n//   const [selectedDepartment, setSelectedDepartment] = useState(\"Computer Science and Engineering\");\n//   const [selectedType, setSelectedType] = useState(\"Hons\");\n//   const [selectName,setSelectedName]=useState(props.name);\n//   const [inputData, setInputData] = useState([]);\n//   const [selectedCourses, setSelectedCourses] = useState([]); \n//   const [selectedCoursesBySemester, setSelectedCoursesBySemester] = useState({});\n//   const [selectedCriteria, setSelectedCriteria] = useState([]);\n\n//   const addCriteria =(panelType,course,index) => {\n//     const courseCode=courseToCodeMapping[course]; \n//   //  { inputData.map((data, index) => (\n//     if( panelType === \"Evaluating Answer Scripts\" ||\n//                 panelType === \"Thesis/Project Report Evaluation\" ||\n//                 panelType === \"Viva Exam\" ){\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${inputData[index]}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${inputData[index].panelType === \"Evaluating Answer Scripts\" || inputData[index].panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${inputData[index]}`}\n//                       name=\"numStudents\"\n//                       value={inputData[index].numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 }\n               \n   \n     \n//   };\n//   const handleCheckboxChange = (e, course, panelType,index) => {\n//     const ischecked = e.target.checked;\n//     const selectedCriteria_s=e.target.value;\n//     setSelectedCriteria((prevSelectedCriteria) => ({\n//       ...prevSelectedCriteria,\n      \n//     }));\n  \n  \n//     if (ischecked) {\n      \n      \n//       setSelectedCriteria([...selectedCriteria,selectedCriteria_s]);\n//       addCriteria( panelType,course,index);\n     \n//     } else {\n//       setSelectedCriteria(selectedCriteria.filter((panelType) =>panelType !== selectedCriteria_s));\n   \n//     }\n\n   \n//   };\n\n//   const addCoursePanel = (courseName) => {\n//     const courseCode = courseToCodeMapping[courseName];\n//     const newPanel = {\n//       panelType: \"Making Question Paper\",\n//       type: \"Hons\",\n//       courseName,\n//       courseCode,\n//       numStudents: 0,\n//       numHours: 0,\n//       tabulationType: \"Yearly\",\n//       tabulationSemester: \"Final Year\",\n//       daysOfExam: \"--\",\n//     };\n//     setInputData((prevData) => [...prevData, newPanel]);\n//   };\n\n//   const removeCoursePanel = (courseName) => {\n//     setInputData((prevData) => prevData.filter((panel) => panel.courseName !== courseName));\n//   };\n\n//   const handleCourseChange = (e) => {\n//     const selectedCourse = e.target.value;\n//     const isChecked = e.target.checked;\n\n//     setSelectedCoursesBySemester((prevSelectedCourses) => ({\n//       ...prevSelectedCourses,\n//       [currentSemester]: isChecked\n//         ? [...(prevSelectedCourses[currentSemester] || []), selectedCourse]\n//         : (prevSelectedCourses[currentSemester] || []).filter((course) => course !== selectedCourse),\n//     }));\n\n//     if (isChecked) {\n//       setSelectedCourses([...selectedCourses, selectedCourse]);\n//       addCoursePanel(selectedCourse);\n//     } else {\n//       setSelectedCourses(selectedCourses.filter((course) => course !== selectedCourse));\n//       removeCoursePanel(selectedCourse);\n//     }\n//   };\n\n//   const handleSemesterChange = (newSemester) => {\n//     setSelectedSemester(newSemester);\n//     setCurrentSemester(newSemester);\n//     setInputData([]);\n//     setSelectedCourses([]); // Clear the selected courses when the semester changes\n//   };\n//   const handleInputChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const newInputData = [...inputData];\n   \n\n//     if (name === \"numStudents\"|| name === \"numHours\") {\n//       // Remove the old values for numStudents or numHours\n//       delete newInputData[index][name];\n//       setInputData(newInputData);\n//     }\n//     if (name === \"stencilPages\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 3) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of Stencil pages. Enter a number between 1 and 3.\");\n//       }\n//     }\n\n//     if (name === \"daysOfExam\" ) {\n//         const newValue = parseInt(value,10);\n//         if( !isNaN(newValue)&& newValue >= 1 && newValue <= 4){\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//         }\n//         else {\n//           console.error(\"Selecting Days Of Exam is manadatory.\");\n//         }\n//     }\n    \n//     if (name === \"numHours\" || name === \"daysOfExam\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid input. Enter a number between 1 and 4.\");\n//       }\n//     }\n\n//     if (name === \"numHours\") {\n//       const newValue = parseInt(value, 10);\n//       if (!isNaN(newValue) && newValue >= 1 && newValue <= 4) {\n//         newInputData[index] = { ...newInputData[index], [name]: newValue };\n//         setInputData(newInputData);\n//       } else {\n//         console.error(\"Invalid number of hours. Enter a number between 1 and 4.\");\n//       }\n//     } else if (name === \"numStudents\") {\n//       if (inputData[index].panelType === \"Evaluating Answer Scripts\" && value === \"\") {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//         alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       } else {\n//         newInputData[index] = { ...newInputData[index], [name]: value };\n//         setInputData(newInputData);\n//       }\n//     } else if (name === \"tabulationType\" || name === \"tabulationSemester\") {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     } else {\n//       newInputData[index] = { ...newInputData[index], [name]: value };\n//       setInputData(newInputData);\n//     }\n//   };\n   \n \n  \n//   const handlePanelTypeChange = (e, index) => {\n//     const { value } = e.target;\n//     const newInputData = [...inputData];\n//     newInputData[index] = { ...newInputData[index], panelType: value };\n//     setInputData(newInputData);\n//   };\n\n//   const handleCalculate = () => {\n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n    \n//     if (inputData.some(data => data.panelType === \"Evaluating Answer Scripts\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Evaluating Answer Scripts.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Viva Exam\" && data.numStudents === 0)) {\n//       alert(\"Number of Students is mandatory for Viva Exam.\");\n//       return;\n//     }\n \n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Lab Exam\" && data.daysOfExam === \"--\")) {\n//       alert(\"Number of Days is mandatory for Lab Exam.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Stencil\" && data.stencilPages === \"--\")) {\n//       alert(\"Number of Pages is mandatory for Stencil.\");\n//       return;\n//     }\n\n//     if (inputData.some(data => data.panelType === \"Making Question Paper\" && data.numHours === 0)) {\n//       alert(\"Number of Hours is mandatory for Making Question Paper.\");\n//       return;\n//     }\n\n//     const results = inputData.map((data) => {\n//       let result = 0;\n     \n//       if (data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\") {\n//         if (data.numStudents === 0) {\n//           alert(\"Number of Students is mandatory for Evaluating Answer Scripts/Viva Exam.\");\n//         } \n//       } \n   \n//       return { ...data, result };\n//     });\n\n//     console.log(\"Results after calculation:\", results);\n//     const panelType = inputData[0].panelType;\n//     const department = encodeURIComponent(selectedDepartment);\n//     const semester = encodeURIComponent(selectedSemester);\n//     const name=encodeURIComponent(selectName);\n//     const type=encodeURIComponent(selectedType);\n//     console.log(\"Panel Type:\", panelType);\n\n//     navigate(`/result?results=${JSON.stringify(results)}&panelType=${inputData[0].panelType}&department=${department}&semester=${semester}&name=${name}&type=${type}`);\n//   };\n//   const courseOptions = {\n//     \"Computer Science and Engineering\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Electronic Circuits\",\n//       \"Numerical Methods\",\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Technical Writing and Presentations\",\n//       \"Database Systems\",\n//       \"Computational Geometry\",\n//       \"Structured Programming Language\",\n//       \"Java\",\n//     ],\n//   };\n//   const criteriaOptions=[\n//     \"Making Question Paper\",\"Evaluating Answer Scripts\",\"Lab Exam\",\"Question Moderation\",\"Stencil\",\n//   ];\n\n//   const courseToCodeMapping = {\n//     \"Structured Programming Language\":\"CSE-105\",\n//     \"Structured Programming Language-Lab\": \"CSE-106\",\n//     \"Data Structures\":\"CSE 153\",\n//     \"Data Structures Lab\":\"CSE 154\",\n//     \"Discrete Mathematics\":\"CSE-155\",\n//     \"Algorithms-I\": \"CSE-209\",\n//     \"Algorithms-I-Lab\": \"CSE-210\",\n//     \"Electronic Circuits\": \"CSE-107\",\n//     \"Numerical Methods\": \"CSE-205\",\n//     \"Web Design and Programming Laboratory-I\":\"CSE-312\",\n//     \"Technical Writing and Presentations\":\"CSE-112\",\n//     \"Database Systems\":\"CSE-255\",\n//     \"Computational Geometry\":\"CSE-305\",\n//     \"Java\":\"CSE-212\",\n//     \"Operating Systems\":\"CSE-309\",\n//     \"Operating Systems Lab\":\"CSE-310\",\n   \n//   };\n\n//   const semesterToCoursesMapping = {\n//     \"1st Year 1st Semester\": [\n//       \"Structured Programming Language\",\n//       \"Structured Programming Language-Lab\",\n//       \"Electronic Circuits\",\n  \n//     ],\n//     \"1st Year 2nd Semester\": [\n//       \"Data Structures\",\n//       \"Data Structures Lab\",\n//       \"Discrete Mathematics\",\n//       \"Technical Writing and Presentations\"\n//     ],\n\n//     \"2nd Year 1st Semester\": [\n//       \"Algorithms-I\",\n//       \"Algorithms-I-Lab\",\n//       \"Numerical Methods\",\n//       \"Java\",\n//     ],\n\n//     \"3rd Year 1st Semester\": [\n//       \"Web Design and Programming Laboratory-I\",\n//       \"Computational Geometry\",\n//       \"Operating Systems\",\n//       \"Operating Systems Lab\",\n//     ],\n   \n//   };\n//   const courseOptionsForSelectedDepartment = courseOptions[selectedDepartment] || [];\n//   const courseOptionsForSelectedSemester = semesterToCoursesMapping[selectedSemester] || [];\n//   const criteriaOptionsForSelectedCourse=criteriaOptions|| [];\n  \n  \n//   return (\n//     <div className=\"container mt-4 \">\n    \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedDepartment\">Select Department:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectedDepartment}\n//           onChange={(e) => setSelectedDepartment(e.target.value)}\n//         >\n//           <option value=\"Computer Science and Engineering\">Computer Science and Engineering</option>\n//         </select>\n//       </div>\n\n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectName\">Name:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedDepartment\"\n//           value={selectName}\n//           onChange={(e) => setSelectedName(e.target.value)}\n//         >\n//           <option value={props.name}>{props.name}</option>\n//         </select>\n//       </div>\n       \n//       <div className=\"form-group select-container\">\n//         <label htmlFor=\"selectedCourseType\">Select Course Type:</label>\n//         <select\n//           className=\"form-control\"\n//           id=\"selectedType\"\n//           value={selectedType}\n//           onChange={(e) => setSelectedType(e.target.value)}\n//         >\n//           <option value=\"Hons\">Hons</option>\n//           <option value=\"Msc\">Msc</option>\n//           {/* Add more course type options as needed */}\n//         </select>\n//       </div>\n    \n     \n//       <div className=\"form-group select-container\">\n//          <label htmlFor=\"selectedSemester\" >Select Semester:</label>\n//          <select\n//           className=\"form-control\"\n//           id=\"selectedSemester\"\n//           value={selectedSemester}\n//           onChange={(e) => {\n//             setSelectedSemester(e.target.value);\n//             setCurrentSemester(e.target.value); // Update current semester when selected\n//             setInputData([]); // Clear panels when the semester changes\n//           }}\n//         >\n//           <option value=\"1st Year 1st Semester\">1st Year 1st Semester</option>\n//            <option value=\"1st Year 2nd Semester\">1st Year 2nd Semester</option>\n//            <option value=\"2nd Year 1st Semester\">2nd Year 1st Semester</option>\n//            <option value=\"2nd Year 2nd Semester\">2nd Year 2nd Semester</option>\n//            <option value=\"3rd Year 1st Semester\">3rd Year 1st Semester</option>\n//            <option value=\"3rd Year 2nd Semester\">3rd Year 2nd Semester</option>\n//            <option value=\"4th Year 1st Semester\">4th Year 1st Semester</option>\n//            <option value=\"4th Year 2nd Semester\">4th Year 2nd Semester</option>\n//          </select>\n//          </div>\n         \n\n//          <div className=\"form-group select-container\">\n//   <label htmlFor=\"courseSelect\">Select Courses:</label>\n//   <div className=\"course-checkboxes\">\n//     {courseOptionsForSelectedSemester.map((course, optionIndex) => (\n//       <label key={optionIndex} className=\"checkbox-label\">\n//         <input\n//           type=\"checkbox\"\n//           name=\"selectedCourse\"\n//           value={course}\n//           onChange={handleCourseChange}\n//           checked={selectedCourses.includes(course)}\n//           className=\"checkbox-input\"\n//         />\n//         {course}\n//       </label>\n//     ))}\n//   </div>\n// </div>\n       \n\n//       {selectedCourses.length > 0 && (\n//       <div className=\"panel-border\">\n//       <div className=\"row d-flex justify-content-center \">\n//         {inputData.map((data, index) => (\n//           <div key={index} className=\"col-md-4 mb-3\">\n//             <div className=\"panel border-secondary p-3 my-2\">\n//               <h3 id=\"PanelNo\"># {data.courseName}</h3>\n              \n            \n//               <div className=\"form-group select-container\">\n//   <label htmlFor={`courseName${index}`}>Course Name:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control \"\n//     id={`courseName${index}`}\n//     name=\"courseName\"\n//     value={data.courseName}\n//     readOnly\n//   />\n//   </div>\n\n// <div className=\"form-group select-container\">\n//   <label htmlFor={`courseCode${index}`}>Course Code:</label>\n//   <input\n//     type=\"text\"\n//     className=\"form-control\"\n//     id={`courseCode${index}`}\n//     name=\"courseCode\"\n//     value={data.courseCode}\n//     readOnly\n//   />\n// </div>\n         \n       \n// <div className=\"form-group select-container\">\n//   <label htmlFor=\"criteriaSelect\">Select Criteria:</label>\n//   <div className=\"criteriacheckboxes\">\n// {criteriaOptionsForSelectedCourse.map((criteria,optionIndex) => (\n//   <label key={optionIndex} className=\"checkbox-label\">\n//   <input\n//     type=\"checkbox\"\n//     name=\"selectedCriteria_s\"\n//     value={criteria}\n//     onChange={(e) => handleCheckboxChange(e, data.courseName, data.panelType,index)}\n//     checked={selectedCriteria.includes(criteria)}\n//     className=\"checkbox-input\"\n//   />\n//   {criteria}\n//   </label>\n//   // Render the label and other information for the criteria here\n// ))\n\n\n// }\n//    </div>\n// </div>       \n\n             \n//               {data.panelType === \"Stencil\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`stencilPages${index}`}>Number of Stencil Pages (1-3):</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`stencilPages${index}`}\n//                     name=\"stencilPages\"\n//                     value={data.stencilPages}\n//                     onChange={(e) => handleInputChange(e, index)}\n//                   >     \n//                         <option value=\"0\">--</option>\n//                         <option value=\"1\">1</option>\n//                         <option value=\"2\">2</option>\n//                         <option value=\"3\">3</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//               {data.panelType === \"Evaluating Answer Scripts\" ||\n//                 data.panelType === \"Thesis/Project Report Evaluation\" ||\n//                 data.panelType === \"Viva Exam\" ? (\n//                   // Render \"Number of Students\" field for other criteria, if needed\n//                   <div className=\"form-group select-container\">\n//                     <label htmlFor={`numStudents${index}`}>Number of Students:</label>\n//                     <select\n//                       type=\"number\"\n//                       className={`form-control${data.panelType === \"Evaluating Answer Scripts\" || data.panelType === \"Viva Exam\" ? \" mandatory\" : \"\"}`}\n//                       id={`numStudents${index}`}\n//                       name=\"numStudents\"\n//                       value={data.numStudents}\n//                       onChange={(e) => handleInputChange(e, index)}\n//                       >\n//                         <option value=\"0\">0</option>\n//                         <option value=\"10\">10</option>\n//                         <option value=\"20\">20</option>\n//                         <option value=\"30\">30</option>\n//                         <option value=\"31\">31</option>\n//                         <option value=\"32\">32</option>\n//                         <option value=\"33\">33</option>\n//                         <option value=\"34\">34</option>\n//                         <option value=\"35\">35</option>\n//                         <option value=\"36\">36</option>\n//                         <option value=\"37\">37</option>\n//                         <option value=\"38\">38</option>\n//                     </select>\n                   \n//                   </div>\n//                 ) : null}\n\n            \n//               <div className=\"form-group select-container\">\n//                 <label htmlFor={`numHours${index}`}>Number of Hours of Exam:</label>\n//                 <select\n//                   type=\"number\"\n//                   className=\"form-control\"\n//                   id={`numHours${index}`}\n//                   name=\"numHours\"\n//                   value={data.numHours}\n//                   onChange={(e) => handleInputChange(e, index)}\n//                 > \n//                   <option value=\"0\">--</option>\n//                   <option value=\"1\">1</option>\n//                   <option value=\"2\">2</option>\n//                   <option value=\"3\">3</option>\n//                   <option value=\"4\">4</option>\n//                   <option value=\"5\">5</option>\n//                   <option value=\"6\">6</option>\n\n//                 </select>\n                \n//               </div>\n\n//               {data.panelType === \"Lab Exam\" ? (\n//                 <div className=\"form-group select-container\">\n//                   <label htmlFor={`daysOfExam${index}`}>Days of Exam:</label>\n//                   <select\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id={`daysOfExam${index}`}\n//                     name=\"daysOfExam\"\n//                     value={data.daysOfExam}\n//                     onChange={(e) => handleInputChange(e, index)}required\n//                   > \n//                     <option value=\"0\">--</option>\n//                     <option value=\"1\">1</option>\n//                     <option value=\"2\">2</option>\n//                     <option value=\"3\">3</option>\n//                     <option value=\"4\">4</option>\n//                     </select>\n//                 </div>\n//               ) : null}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       </div>\n//        )}\n//       <div className=\"text-center\"> {/* Center-align the button */}\n//         <button className=\"btn btn-primary btn-lg calculate-button\" onClick={handleCalculate}>\n//           Prepare My Bill\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default InputForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}